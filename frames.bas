#RetroDevStudio.MetaData.BASIC:7169,BASIC V7.0,uppercase,10,10
########
# DATA FORMAT #
#
# FIRST COMES LIST OF OFFSETS. EACH OFFSET IS 2 BYTES LONG
#
# CONTENT AREA:
# 4 BYTES FOR THE FRAME
# FOLLOWING BYTES:
# 0 - DONE
# 1 - PRINT AT WITH 3 PARAMETERS (Y-OFFSET, X-OFFSET, TEXT-ID)

# PA:POKE ADDRESS
# PC:COUNT ENTRIES
# OS(): CONTAINS OFFSET VALUES OF EACH FRAME DEFINITION

1 DEF FN HB(ZZ)=DEC(LEFT$(HEX$(ZZ),2))
2 DEF FN LB(ZZ)=DEC(RIGHT$(HEX$(ZZ),2))
3 FAST


10 PA=DEC("1300"):PC=0:BANK0:AN=-1:NE=27:OS=0
20 DIM OS(NE)


#0 CAL
100 BX=1:BY=5:BW=8:BH=5:GOSUB 1000:GOSUB 1050

#1 PLAYERNAME-LOCATION HEADER
110 BX=1:BY=1:BW=26:BH=3:GOSUB 1000:GOSUB 1050

#2 CASH HEADER
120 BX=27:BY=1:BW=12:BH=3:GOSUB 1000:GOSUB 1050

#3 HUB PLA - PLANTATION SIZES
130 BX=15:BY=5:BW=24:BH=5:GOSUB 1000
131 BX=1:BY=1:TX=52:GOSUB 1100
132 BX=1:BY=2:TX=53:GOSUB 1100
133 BX=1:BY=3:TX=53:GOSUB 1100:GOSUB 1050

#4 HUB PLA - LAST VISIT DATA
140 BX=1:BY=12:BW=22:BH=12:GOSUB 1000
141 BX=1:BY=8:TX=54:GOSUB 1100
142 BX=1:BY=9:TX=55:GOSUB 1100
143 BX=1:BY=10:TX=56:GOSUB 1100:GOSUB 1050

#5 TRAVELCOST DIALOG
150 BX=1:BY=21:BW=24:BH=3:GOSUB 1000
151 BX=1:BY=1:TX=57:GOSUB 1100:GOSUB 1050

#6 TRAVEL WORLDMAP
160 BX=1:BY=1:BW=24:BH=18:GOSUB 1000:GOSUB 1050

#7 TRAVEL PLAYERNAME AND LOCATION
170 BX=1:BY=21:BW=24:BH=3:GOSUB 1000:GOSUB 1050

#8 TRAVEL TARGET DESTINATIONS
180 BX=26:BY=1:BW=13:BH=18:GOSUB 1000:GOSUB 1050

#9 BANK SAFES
190 BX=1:BY=3:BW=38:BH=10:GOSUB 1000:GOSUB 1050

#10 BANK FINANCIAL DATA
200 BX=1:BY=15:BW=22:BH=6:GOSUB 1000
201 BX=1:BY=1:TX=58:GOSUB 1100
202 BX=1:BY=3:TX=59:GOSUB 1100
203 BX=1:BY=4:TX=60:GOSUB 1100:GOSUB1050

#11 GALLERY ART CATEGORIES - TWICE: AND LIST OF ART PIECES IN THAT CATEGORY
210 BX=1:BY=4:BW=38:BH=13:GOSUB 1000:GOSUB 1050

#12 PLANTATION FRAME
220 BX=1:BY=5:BW=25:BH=19:GOSUB 1000:GOSUB 1050

#13 BUY LAND NUMBERS
230 BX=27:BY=5:BW=12:BH=4:GOSUB 1000:GOSUB 1050

#14 PRODUCE SELECTION
240 BX=27:BY=19:BW=12:BH=5:GOSUB 1000:GOSUB 1050

#15 PLANTATION PURCHASE DATA
250 BX=27:BY=9:BW=12:BH=10:GOSUB 1000:GOSUB 1050

#16 WAREHOUSE STATIC TEXTS
260 BX=1:BY=5:BW=38:BH=8:GOSUB 1000:GOSUB 1050

#17 WAREHOUSE TRANSPORT CHOICE
270 BX=19:BY=19:BW=20:BH=5:GOSUB 1000
271 BX=1:BY=1:TX=36:GOSUB 1100
272 BX=1:BY=2:TX=37:GOSUB 1100
273 BX=1:BY=3:TX=21:GOSUB 1100:GOSUB 1050

#18 PRODUCE SELECTION TRANSPORT
280 BX=19:BY=19:BW=12:BH=5:GOSUB 1000:GOSUB 1050

#19 QUANTITY SELECTION
290 BX=1:BY=19:BW=17:BH=5:GOSUB 1000:GOSUB 1050

#20 MARKETPLACE STORAGES
300 BX=1:BY=5:BW=38:BH=11:GOSUB 1000:GOSUB 1050

#21 MARKETPLACE PRICES
310 BX=1:BY=17:BW=24:BH=6:GOSUB 1000
311 BX=1:BY=1:TX=0:GOSUB1100
312 BX=1:BY=2:TX=1:GOSUB1100
313 BX=1:BY=3:TX=2:GOSUB1100
314 BX=1:BY=4:TX=3:GOSUB1100:GOSUB 1050

#22 TRAVEL PROGRESS FRAME (SHIPS AND TRAINS)
320 BX=1:BY=1:BW=38:BH=5:GOSUB 1000
321 BX=1:BY=2:TX=61:GOSUB1100:GOSUB 1050

#23 TRAVEL PLAYER DEPARTURE/ARRIVAL
330 BX=1:BY=19:BW=38:BH=5:GOSUB 1000:GOSUB 1050

#24 OVERVIEW FORWARD CONTRACTS
340 BX=1:BY=6:BW=38:BH=5:GOSUB 1000:GOSUB 1050

#25 OVERVIEW TRANSPORTS IN PROGRESS
350 BX=1:BY=12:BW=38:BH=5:GOSUB 1000:GOSUB 1050

#26 OSEL4PRO PRODUCE SELECTION
360 BX=30:BY=17:BW=9:BH=7:GOSUB 1000
361 BX=1:BY=5:TX=21:GOSUB 1100:GOSUB 1050

#27 MONTHLY REPORT
370 BX=1:BY=1:BW=38:BH=14:GOSUB 1000
371 BX=1:BY=1:TX=62:GOSUB 1100

372 BX=1:BY=3:TX=16:GOSUB1100
373 BX=1:BY=4:TX=17:GOSUB1100
374 BX=1:BY=5:TX=18:GOSUB1100
375 BX=1:BY=6:TX=19:GOSUB1100

376 BX=20:BY=3:TX=0:GOSUB1100
377 BX=20:BY=4:TX=1:GOSUB1100
378 BX=20:BY=5:TX=2:GOSUB1100
379 BX=20:BY=6:TX=3:GOSUB1100

380 BX=1:BY=8:TX=63:GOSUB1100
381 BX=1:BY=9:TX=58:GOSUB1100
382 BX=1:BY=10:TX=64:GOSUB1100
383 BX=1:BY=12:TX=65:GOSUB1100:GOSUB 1050 


900 IF AN THEN AN=0:PA=PA+PC*2:PC=0:GOTO 100


920 PRINT "INSERT DISK":GETKEY I$
930 BSAVE"@FRAMES2",B0,P(DEC("1300")) TO P(PA+OS+IO+1)

940 PRINT "FRAMES:"PC,"LENGTH:"PA+OS+IO-DEC("1300")


999 END



# WRITE FRAMEDATA
# OS: GLOBAL OFFSET OF CONTENT BLOCK
# IO: INTERNAL OFFSET (OFFSET INSIDE A DATA BLOCK)
1000 IF AN THEN BEGIN
#     REMEMBER WHERE WE NEED TO WRITE TO
1005  PRINT PC" STARTS AT "OS
1010  OS(PC)=OS

1015  POKE PA+PC*2,FNLB(OS+NE+NE+2)
1016  POKE PA+PC*2+1,FNHB(OS+NE+NE+2)

1020  OS=OS+4
1030 BEND:ELSE BEGIN
1032  OS=OS(PC)
1034  POKE PA+OS,BY:POKEPA+OS+1,BX:POKEPA+OS+2,BW:POKEPA+OS+3,BH
1036  IO=4
1038  PRINT "FRAME "PC" CONTENT AT "PA+OS
1039 BEND

1049 RETURN

# WRITE END BYTE 
1050 IF AN THEN OS=OS+1:ELSE POKE PA+OS+IO,0:PRINT " FRAME "PC" ENDS AT "PA+OS+IO

# ALWAYS INCREASE COUNTER
1060 PC=PC+1

1099 RETURN

# WRITE PRINT AT DATA
1100 IF AN THEN OS=OS+4:ELSE BEGIN
1120  POKE PA+OS+IO,1:POKEPA+OS+IO+1,BY:POKEPA+OS+IO+2,BX:POKEPA+OS+IO+3,TX
1130  PRINT " FRAME "PC" PRINT AT "PA+OS+IO
1135  IO=IO+4
1140 BEND

1199 RETURN


