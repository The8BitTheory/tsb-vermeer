#RetroDevStudio.MetaData.BASIC:2049,Tuned Simons' BASIC,lowercase,10,10
# ALLO OODWELL! :-)

# CH HAB EIGENTLICH NUR ZWEI NMERKUNGEN ZU DEINEM IDEO. AS EINE IST, DASS
# DU DEN EFEHL  NICHT ZU KENNEN SCHEINST, ER DIENT DAZU, TELLEN AUF DEM
# ILDSCHIRM ZU INVERTIEREN. A ERUEBRIGT SICH EINE ZWEIFACHE EXTAUSGABE (EIN-
# MAL REVERS).

# AS ANDERE IST DIE GROSSE NTERSTUETZUNG, DIE  EINEM GEBEN KANN, WENN MAN
# STRUKTURIERTE ROGRAMME ENTWICKELN MOECHTE.

# EIN ROGRAMM WAR NATUERLICH TOTALER PAGHETTI-ODE, SOLLTE ES JA AUCH SEIN
# ("MAN KANN MIT  MAL EBEN WAS ZAUBERN"). BER  ERLEICHTERT *UNGEMEIN* DAS
# STRUKTURIERTE ODEN UND LANEN! ELCHE EATURES SOLL MEIN ROGRAMM HABEN?
# ANN ICH DIE AUF EINE UNKTION HERUNTERBRECHEN, DIE IN EINE ROZEDUR PASST?

# N DEN ALLERMEISTEN AELLEN FINDEST DU MIT  DAZU GUTE NTWORTEN, LEICHT
# NACHVOLLZIEHBAR, KURZ UND SCHNELL IM BLAUF.

# N MEINER ERSION VON DEINEM ROGRAMM HIER HABE ICH DAS ALLES ZU VERDEUTLICHEN
# VERSUCHT. ENN ICH DABEI ETWAS UEBER DAS IEL HINAUSGESCHOSSEN BIN, BITTE
# NICHT BOESE SEIN. AS PASSIERT HALT SO IM LOW! ;-)

# -----------------------------------------------------------------------------

# S GEHT LOS:  *OHNE* ARAMETER MACHT SOWOHL ILDSCHIRM ALS AUCH AHMEN
# SCHWARZ, DER URSOR BLEIBT WIE ER WAR. IER MACHT DAS INN, DENN DIE URSOR-
# FARBE KOMMT ERST SPAETER INS PIEL (IN  SCREEN).

# TRUKTURIERUNG: IES HIER IST DAS AUPTPROGRAMM: > INIT:SCREEN:MENUE <.
# N SO EINE UFTEILUNG HAB ICH MICH SCHNELL GEWOEHNT. IE IST IMMER DER ERSTE
# CHRITT ZU (WEITERER) TRUKTUR. AST ALLE MEINE -ROGRAMME FANGEN SO AN.

100 COLOUR0,0,1:CA=$E800
105 IFA=0THENA=1:MEM:PRINT"ADE EICHENSATZ":LOAD"TSB2.SET",0,0,CA
110 INIT:SCREEN:MENUE
120 NRM:CLS:COLOUR11,12,0
130 END

# INIT: RRAYS, IHRE EFUELLUNG, WICHTIGE ARIABLEN, DIE ZUERST IM UCHPROZESS
# DES NTERPRETERS STEHEN MUESSEN. EICHENSATZ. : AMIT HAST DU GROSSE
# LEXIBILITAET BEIM EFUELLEN VON RRAYS GEWONNEN! IN WAHRER EGEN! CH HABE
# DESHALB ABSICHTLICH DIE -EILEN ETWAS VERTEILT. EI  WIRD 
# BERUECKSICHTIGT (AUCH WICHTIG!) -  BESCHLEUNIGT ALLE S. AS
# CHLUESSELWORT  HABE ICH GRUNDSAETZLICH WEGGELASSEN, DAS ABEL ALLEIN
# REICHT JA ALS ROZEDURAUFRUF. EBRIGENS IST  *MIT* CHLUESSELWORT GERING-
# FUEGIG SCHNELLER ALS OHNE (DIE RKENNUNG ALS -UFRUF FAELLT BEI VORHAN-
# DENEM  WEG).

1000 PROC INIT

1002  CHECK
1010  INITMOUSE

1015  DIM M$(14),F%(1,6),BD$,I,I1:F=11:FS=12:FB=6:IL=10:ID=0:MI=0


#PD(PLAYER-ID,#): LAYER ATA
#              0: CURRENT CITY
#              1: CASH
1016  DIM PD(1,1)
1017  PD(0,0)=5:PD(0,1)=50000

#GS(#): GAME STATE
#   0: CURRENT PLAYER
#   1: CURRENT ROOM
1018  DIM GS(1)
#     PLAYER STARTS IN BERLIN
1019  GS(0)=0:GS(1)=1

# ROOMS:
#  ROOM DEFINES THE NAVIGATION OPTIONS AND WHAT'S DISPLAYED
# HAT MEANS THAT SUB-SECTIONS OF "ROOMS" ARE ALSO ROOMS BY THEMSELVES
# EVEN THOUGH IT MIGHT NOT LOOK LIKE THAT FOR THE PLAYER.
# G BUYING A PLANTATION IS A SEPARATE ROOM JUST AS WELL AS THE PLANTATION
# OVERVIEW, SELLING A PLANTATION AND THE PLANTATION MANAGEMENT SCREEN.

# THE S ARE NOT ORDERED VERY WELL, THE ORDER REFLECTS THE ORDER OF
# DEVELOPMENT.

# 0: CITY HUB EMPORIUM
# 1: CITY HUB GALLERIE
# 2: CITY HUB PLANTATION
# 3: TRAVEL
# 4: HOTEL
# 5: GALLERIE
# 6: BANK
# 7: AUKTIONSHAUS
# 8: PLANTATION
# 9: LAGER
#10: MARKTPLATZ
#11: EXPEDITION

#12: BUY PLANTATION
#13: SELL PLANTATION
#14: MANAGE PLANTATION

# ROOM-OPTIONS(ROOM-ID,OPTION-TARGET)
1020  DIM RO(14,5)
1021  RO(0,0)=3:RO(0,1)=10:RO(0,2)=4:RO(0,3)=6:RO(0,4)=7:RO(0,5)=-1
1022  RO(1,0)=3:RO(1,1)=5 :RO(1,2)=4:RO(1,3)=6:RO(1,4)=7:RO(1,5)=-1
1023  RO(2,0)=3:RO(2,1)=8 :RO(2,2)=4:RO(2,3)=6:RO(2,4)=11:RO(2,5)=9
1024  RO(3,0)=128:RO(3,1)=-1
1025  RO(4,0)=128:RO(4,1)=-1
1026  RO(5,0)=1:RO(5,1)=-1
1027  RO(6,0)=128:RO(6,1)=-1
1028  RO(7,0)=128:RO(7,1)=-1

1029  RO(8,0)=12:RO(8,1)=13:RO(8,2)=14:RO(8,3)=2

1030  RO(9,0)=2:RO(9,1)=-1
1031  RO(10,0)=0:RO(10,1)=-1
1032  RO(11,0)=2:RO(11,1)=-1
1033  RO(12,0)=0:RO(12,1)=-1
1034  RO(13,0)=0:RO(13,1)=-1
1035  RO(14,0)=0:RO(14,1)=-1




1100  M$(0)="USGANG":M$(1)="USGANG":M$(2)="USGANG":M$(3)="EISEN"
1110  M$(4)="OTEL":M$(5)="ALERIE":M$(6)="ANK":M$(7)="UKTION"
1120  M$(8)="LANTAGE":M$(9)="AGERHAUS":M$(10)="ARKT":M$(11)="XPEDITION"

# LANTAGE
1130  M$(12)="AUFEN":M$(13)="ERKAUFEN":M$(14)="ERWALTEN"




1200  RESET 58250

1210  FOR I=1 TO 9
1220   READ A:BD$=BD$+CHR$(A)
1230  NEXT

1240  RESET 2000

1250  FOR I=1 TO 6
1260   READ F%(0,I)
1270  NEXT
1280  FOR I=1 TO 6
1290   READ F%(1,I)
1300  NEXT

1310  ZEICHEN
1320  INITCITIES

1330 END PROC


# ARBEN
2000 DATA 15, 9,11, 2, 5, 6
2010 DATA  1, 2,15,10,13,14


# TRUKTUR: ILDSCHIRMAUFBAU MIT BLEIBENDEN NHALTEN IN EINEM EIGENEN . IER
# HAST DU IN DEINEM IDEO JA AUCH VARIABLE ERTE EINGEBAUT (DIE ARBEN), GERE-
# GELT DURCH DIE ARIABLE . EI UFRUFEN VON NTERPROGRAMMEN (FRAME) SETZE ICH
# ALLE NOETIGEN ARAMETER MOEGLICHST DAVOR IN DIE GLEICHE EILE, DAS SCHAFFT
# LARHEIT. - EINE RLAEUTERUNG ZU  IM IDEO FAND ICH SEHR ANSCHAULICH!

# UNKTIONEN: AS BRAUCHT MAN ZUR ARSTELLUNG AUF DEM ILDSCHIRM: AESTEN,
# CHATTEN, NHALTE, REALISIERT MIT FRAME, DANACH  (ODER  (..) ).
# ENN EIN ENUE DABEI IST WIE HIER: MENUE, ITEM UND TAG (ENUEPUNKT UND AR-
# KIERUNG DESSELBEN). N MENUE FINDET DIE ROGRAMMSTEUERUNG STATT (CHLEIFE MIT
# ). CH LESE ZUR ERMEIDUNG VON TRINGMUELL UND ZUR BLAUFBESCHLEUNIGUNG
# DEN ASTENDRUCK BEI  DIREKT AUS DEM INGABEPUFFER AUS (512). UR E-
# FUELLUNG DES ENUES DIENT ' ITEMS'.


# ILDSCHIRMMASKE
# IL: ITEM LENGTH (MAX CHARACTERS OF MENU-ITEM)
# OC: OPTION COUNT (NR OF MENU ITEMS)
6800 PROC SCREEN
6810  FILL 0,0,40,25,0,15
6811  COLOUR,1

6815  PRINT AT(0,0) GS(1)

6820  IF GS(1)=0 THEN IL=10:OC=4:OHUBEMP
6821  IF GS(1)=1 THEN IL=10:OC=4:OHUBGAL
6822  IF GS(1)=2 THEN IL=10:OC=5:OHUBPLA
6823  IF GS(1)=3 THEN IL=11:OC=21:OTRA
6825  IF GS(1)=4 THEN IL=10:OC=0:OHOT
6827  IF GS(1)=5 THEN IL=10:OC=0:OGAL
6828  IF GS(1)=6 THEN IL=10:OC=0:OBAN
6829  IF GS(1)=7 THEN IL=10:OC=0:OAUC
6830  IF GS(1)=8 THEN IL=10:OC=3:OPLA
6831  IF GS(1)=9 THEN IL=10:OC=0:OWAR
6832  IF GS(1)=10 THEN IL=10:OC=0:OMAR
6833  IF GS(1)=11 THEN IL=10:OC=0:OEXP

# UY PLANTATION
6834  IF GS(1)=12 THEN OPLABUY
# ELL PLANTATION
6835  IF GS(1)=13 THEN IL=10:OC=0:OPLASEL
# MANAGE PLANTATION
6836  IF GS(1)=14 THEN IL=10:OC=0:OPLAMAN

6837  IF GS(1)=15 THEN OPLAPLANT



6860  TAG

6870 END PROC


########################
# KTUELLER RT UND ATUM
# ANK, LANTAGE, ITYHUB, ALLERIE
6900 PROC LOCDATECASHHEADER

6901  BX=1:BY=1:BW=26:BH=3:FRAME
6902  PRINT AT(BY+1,BX+1) TX$(PD(0,0),0)

# NZEIGE ARVERMOEGEN
6903  BX=27:BY=1:BW=12:BH=3:FRAME
6904  PRINT AT(BY+1,BX+1) PD(0,1)" "

6905 END PROC





################
# USWAHLMENUE
# UEBERALL AUSSER EISEN
# TV:TEMP VALUE
# OC:OPTION COUNT
6910 PROC CHOICEMENU

6912  BX=27:BY=20-OC:BW=12:BH=3+OC:FRAME

#     IN ENUE BEFUELLEN
6914  FOR I1=0 TO OC

#      INEN EINZELNEN ENUEPUNKT AUSGEBEN
6916   TV=RO(GS(1),I1)
6918   IF TV=128 THEN TV=0
6920   IF TV>=0 THEN PRINT AT(BY+I1+1,BX+1) M$(TV);

6922  NEXT

6924 END PROC





######
# GENERIC BOX WITH TEXT
#######
6930 PROC BOXWITHTEXT

6932  BX=1:BY=6:BW=20:BH=5:FRAME
6934  CENTER AT(BY+2,BX)TX$,BW

6939 END PROC


# EACH OF THE FOLLOWING 1000-LINES SECTIONS HANDLES ONE ROOM
# EACH OF THE HANDLERS CONSISTS OF 3 MAIN PROCEDURES
# INPUT, LOGIC, OUTPUT
# INPUT IS CALLED BY THE HANDLEENTER DISPATCH METHOD
# LOGIC IS USUALLY CALLED BY THE INPUT PART AND CONTAINS THE ACTUAL GAME-CODE
# OUTPUT DEALS WITH RENDERING THE SCREEN, BASED ON THE ROOM'S DATA


###################
# TADTBILDSCHIRM MPORIUM #
###################
7000 PROC OHUBEMP

7001  LOCDATECASHHEADER
7002  CHOICEMENU

7199 END PROC

7200 PROC IHUBEMP
7210  HANDLECHOICE

7230 END PROC

###################
# TADTBILDSCHIRM ALLERIE #
###################
8000 PROC OHUBGAL

8001  LOCDATECASHHEADER
8002  CHOICEMENU

8199 END PROC

8200 PROC IHUBGAL
8210  HANDLECHOICE
8220 END PROC


###################
# TADTBILDSCHIRM LANTAGE #
###################
9000 PROC OHUBPLA

9001  LOCDATECASHHEADER


9010  BX=1:BY=12:BW=24:BH=11:FRAME
9020  PRINT AT(BY+1,BX+1) "RSTER ESUCH";
9030  PRINT AT(BY+3,BX+1) "RODUKTION:";
9040  PRINT AT(BY+4,BX+1) TT$(VAL(TX$(PD(0,0),1)));
9050  PRINT AT(BY+5,BX+1) TT$(VAL(TX$(PD(0,0),2)));

9102  CHOICEMENU

9199 END PROC

9200 PROC IHUBPLA
9210  HANDLECHOICE
9220 END PROC



###################
# EISEBILDSCHIRM #
###################

#INPUT
10000 PROC ITRA

10010  IF ID<21 THEN PD(0,0)=ID

10020  EXEC FILLCURCITY

10030  ID=0:SCREEN

10040 END PROC


#OUTPUT
10800 PROC OTRA

#     RAHMEN FUER WELTKARTE
10810  BX=1:BY=1:BW=24:BH=17:FRAME

#     ANZEIGE SPIELERNAME UND AKTUELLE STADT
10820  BX=1:BY=20:BW=24:BH=3:FRAME

#     AUSWAHL DER STADT
10830  BX=26:BY=0:BW=13:BH=24:FRAME

10840  FOR I1=0 TO 20
10850   PRINT AT(BY+I1+1,BX+1) TX$(I1,0);
10860  NEXT

10870  PRINT AT(BY+21+1,BX+1) M$(0)+" ";

10880 END PROC




#########
# OTEL #
#########
12000 PROC OHOT
12010  LOCDATECASHHEADER

12020  TX$="OTEL":EXEC BOXWITHTEXT

12030  CHOICEMENU

12040 END PROC


12100 PROC IHOT
12110  HANDLECHOICE
12120 END PROC

########
# ANK #
########
13000 PROC OBAN

13010  LOCDATECASHHEADER

#     TRESORE
13020  BX=1:BY=3:BW=38:BH=10:FRAME

#     LISTE DER AKTIENKURSE
13030  BX=1:BY=15:BW=22:BH=6:FRAME

13040  CHOICEMENU

13050 END PROC

13100 PROC IBAN
13110  HANDLECHOICE
13120 END PROC

###########
# ALERIE #
###########
14000 PROC OGAL

14010  LOCDATECASHHEADER
14020  TX$="ALERIE":EXEC BOXWITHTEXT
14030  CHOICEMENU

14040 END PROC

14100 PROC IGAL
14110  HANDLECHOICE
14120 END PROC


###########
# UKTION #
###########
15000 PROC OAUC

15010  LOCDATECASHHEADER
15020  TX$="UKTION":EXEC BOXWITHTEXT
15030  CHOICEMENU

15040 END PROC

15100 PROC IAUC
15110  HANDLECHOICE
15120 END PROC


############
# LANTAGE #
############
16000 PROC OPLA

16010  LOCDATECASHHEADER
16020  BX=1:BY=5:BW=25:BH=19:FRAME
16025  FILL BY+1,BX+1,BW-2,BH-2,96,5
16030  CHOICEMENU

16040 END PROC


16100 PROC IPLA
16105  IF ID=0 THEN OPLABUY:END PROC


16110  IF ID > 0 AND ID<3 THEN GS(1)=12+ID: ELSE GS(1)=2
16112  ID=0
16114  SCREEN
16190 END PROC

##################
# BUY PLANTATION #
##################
17000 PROC OPLABUY
17010  GS(1)=12:IL=10:OC=2

17015  BX=27:BY=5:BW=12:BH=4:FRAME
17016  PRINT AT(BY+1,BX+1) "ANDPREIS"
17017  PRINT AT(BY+2,BX+1) "291 "

17020  BX=27:BY=17:BW=12:BH=5:FRAME
17021  PRINT AT(BY+1,BX+1) TT$(VAL(TX$(PD(0,0),1)));
17022  PRINT AT(BY+2,BX+1) TT$(VAL(TX$(PD(0,0),2)));
17023  PRINT AT(BY+3,BX+1) M$(0)
17024  TAG

17030 END PROC

########################

17100 PROC IPLABUY
17102  IF ID<2 THEN OPLAPLANT:END PROC

17110  IF ID=2 THEN GS(1)=8:ID=0:SCREEN:END PROC
17120 END PROC

#########################



####################
# PLANT PLANTATION #
####################
17500 PROC OPLAPLANT
17502  GS(1)=15:OC=0

# SPRITE-NR,BLOCK,COLOR,PRIO,TYPE
# 1,1,BLACK,DONT SHOW,HIRES
17510  MOB SET 1,1,0,0,0:MMOB 1,50,50
17512  MOB SET 2,2,1,0,0:MMOB 2,50,50

17520  REPEAT
17521   
17525  UNTIL Q=-1

17599 END PROC

###############

17700 PROC IPLAPLANT

17710  MOB OFF 1:MOB OFF 2

17725  GS(1)=8:ID=0:SCREEN

17799 END PROC


###################
# SELL PLANTATION #
###################
18000 PROC OPLASEL
18010  TX$="LANTAGE VERKAUFEN":EXEC BOXWITHTEXT
18020  CHOICEMENU
18099 END PROC

######################

18100 PROC IPLASEL
18110  GS(1)=8
18111  ID=0
18112  SCREEN
18120 END PROC



#####################
# MANAGE PLANTATION #
#####################
19000 PROC OPLAMAN
19010  TX$="LANTAGE VERWALTEN":EXEC BOXWITHTEXT
19020  CHOICEMENU
19099 END PROC

19100 PROC IPLAMAN
19110  GS(1)=8
19111  ID=0
19112  SCREEN
19120 END PROC


#############
# AREHOUSE #
#############
20000 PROC OWAR

20010  LOCDATECASHHEADER
20020  TX$="AGERHAUS":EXEC BOXWITHTEXT
20030  CHOICEMENU

20040 END PROC

20100 PROC IWAR
20110  HANDLECHOICE
20120 END PROC

###############
# ARKETPLACE #
###############
21000 PROC OMAR

21010  LOCDATECASHHEADER
21020  TX$="ARKTPLATZ":EXEC BOXWITHTEXT
21030  CHOICEMENU

21040 END PROC

21100 PROC IMAR
21110  HANDLECHOICE
21120 END PROC

##############
# XPEDITION #
##############
22000 PROC OEXP

22010  LOCDATECASHHEADER
22020  TX$="XPEDITION":EXEC BOXWITHTEXT
22030  CHOICEMENU

22040 END PROC

22100 PROC IEXP
22110  HANDLECHOICE
22120 END PROC


# INEN ASTEN MIT CHATTEN MALEN, DIE ARBEN SIND IN EINEM RRAY, DAMIT MAN
# DIE ARBKOMBINATIONEN UNTER ONTROLLE HAT.

58200 PROC FRAME
58210  INSERT BD$,BY,BX,BW,BH,FB
58215  FILL BY+1,BX+1,BW-2,BH-2,32,1
58220  FCOL BY+BH,BX+1,BW,1,11:REM F%(0,ID)
58225  FCOL BY+1,BX+BW,1,BH,11:REM F%(0,ID)
58230 END PROC

# AHMENZEICHEN
58250 DATA 111,183,112,180,32,170,108,187,188



# TATT OPPELAUSGABE (EINMAL DAVON REVERS) EINFACH  VERWENDEN!

# INEN ENUEPUNKT MARKIEREN
58400 PROC TAG
58410  INV BY+ID+1,BX+1,IL,1
58420 END PROC

# AS ENUE, IN EINER CHLEIFE. CH VERSUCHE IMMER JEGLICHE ORM VON  ZU
# VERMEIDEN, DAMIT EIN ROGRAMM JEDERZEIT MOEGLICHST EINFACH ZU VERAENDERN IST.

58440 PROC MENUE
#8442  TAG

58443  LOOP
58444   IF MI THEN QRYMOUSE
58446   IF NOT MI THEN DO

58448    Q=0
58449    OC=4

58452    REPEAT

58454     R=0:KEYGET I$:I=PEEK(512)

58456     IF I=145 THEN TAG:ID=ID-1:R=-1:IF ID<0 THEN ID=OC
58458     IF I=17 THEN TAG:ID=ID+1:R=-1:IF ID>OC THEN ID=0

58460     IF I=13 THEN HANDLEENTER

58462     IF I=ASC("I") THEN MI=-1:Q=-1
58464     IF R THEN TAG

58466    UNTIL Q=-1

58470   DONE
58472  END LOOP

58474 END PROC





# HANDLES THE ENTER KEY
# THIS IS JUST A DISPATCH METHOD THAT FORWARDS TO THE INPUT HANDLER
# OF THE ACCORDING ROOM

58479 PROC HANDLEENTER
58480  IF GS(1)=0 THEN EXEC IHUBEMP:END PROC
58481  IF GS(1)=1 THEN EXEC IHUBGAL:END PROC
58482  IF GS(1)=2 THEN EXEC IHUBPLA:END PROC
58483  IF GS(1)=3 THEN EXEC ITRA:END PROC
58484  IF GS(1)=4 THEN EXEC IHOT:END PROC
58485  IF GS(1)=5 THEN EXEC IGAL:END PROC
58486  IF GS(1)=6 THEN EXEC IBAN:END PROC
58487  IF GS(1)=7 THEN EXEC IAUC:END PROC
58488  IF GS(1)=8 THEN EXEC IPLA:END PROC
58489  IF GS(1)=9 THEN EXEC IWAR:END PROC
58490  IF GS(1)=10 THEN EXEC IMAR:END PROC
58491  IF GS(1)=11 THEN EXEC IEXP:END PROC
58492  IF GS(1)=12 THEN EXEC IPLABUY:END PROC
58493  IF GS(1)=13 THEN EXEC IPLASEL:END PROC
58494  IF GS(1)=14 THEN EXEC IPLAMAN:END PROC
58495  IF GS(1)=15 THEN EXEC IPLAPLANT:END PROC

58499 END PROC



#GS(1): CURRENT ROOM
#TV: TEMP-VALUE
58500 PROC HANDLECHOICE

58505  TV=RO(GS(1),ID)
58510  IF TV<128 THEN GS(1)=TV: ELSE EXEC FILLCURCITY
58515  ID=0
58520  SCREEN

58525 END PROC



58550 PROC FILLCURCITY
58560   GS(1)=2
58570   IF TX$(PD(0,0),1)="" THEN GS(1)=0
58580   IF TX$(PD(0,0),1)="" THEN GS(1)=1
58599 END PROC




# AUSABFRAGE
58600 PROC QRYMOUSE

58602  Q=0:MOB ON 0
58605  REPEAT

58610   GET X$

58615   IF X$=CHR$(160) THEN CLICKP
#1517   IF JOY(1)=1 THEN CLICKS

58620   X0=INT(PEEK($D000)):X1=PEEK($D010 )AND 1:Y0=PEEK($D001):X=X0+256*X1
58630   X=INT(X0+X1*256):Y=INT(Y0)

58640   USE AT(17,18)"X =-###",X:USE AT(18,18)"Y =-###",Y:X$=""

58645   GET I$:IF LEN(I$)>0 THEN IF I$="I" THEN MI=0:Q=-1

58650  UNTIL Q=-1
58658  MOB OFF 0

58660 END PROC



# CLICK PRIMAERE MAUSTASTE (LINKS)
58700 PROC CLICKP
58710  PRINT AT(19,18)"LINKS "
58799 END PROC

# CLICK SEKUNDAERE MAUSTASTE (RECHTS)
58800 PROC CLICKS
58810  PRINT AT(19,18)"RECHTS"
58899 END PROC


58900 PROC INITMOUSE
58902  IF PEEK(828)<>$AD THEN PRINT"ADE AUSTREIBER":LOAD"MAUS.DRV",0,0,$0334
58904  DESIGN 0,$C000
58906  @BBB.....................
58907  @BBBBB...................
58908  @BBBBBBB.................
58909  @BBBBBBBBB...............
58910  @BBBBB...................
58911  @BB..BBB.................
58912  @B....BBB................
58913  @......BBB...............
58914  @.......BB...............
58915  @........................
58916  @........................
58917  @........................
58918  @........................
58919  @........................
58920  @........................
58921  @........................
58922  @........................
58923  @........................
58924  @........................
58925  @........................
58926  @........................
58930  MOB SET 0,0,15,128,0
58932  SYS$033C:RLOCMOB0,160,100,0,1
58934  MOB OFF 0

58935  DESIGN 0,$C000+64*1
58936  @.BBBBBBBBBBB............
58937  @BB.........BB...........
58938  @B.B.......B.B...........
58939  @B..BBBBBBB..B...........
58940  @B..B.....B..B...........
58941  @B..B.....B..B...........
58942  @B..B.....B..B...........
58943  @B..B.....B..B...........
58944  @B..B.....B..B...........
58945  @B..BBBBBBB..B...........
58946  @B.B.......B.B...........
58947  @BB.........BB...........
58948  @.BBBBBBBBBBB............
58949  @........................
58950  @........................
58951  @........................
58952  @........................
58953  @........................
58954  @........................
58955  @........................
58956  @........................


58960  DESIGN 0,$C000+64*2
58961  @........................
58962  @..BBBBBBBBB.............
58963  @.B.BBBBBBB.B............
58964  @.BB.......BB............
58965  @.BB.......BB............
58966  @.BB.......BB............
58967  @.BB.......BB............
58968  @.BB.......BB............
58969  @.BB.......BB............
58970  @.BB.......BB............
58971  @.B.BBBBBBB.B............
58972  @..BBBBBBBBB.............
58973  @........................
58974  @........................
58975  @........................
58976  @........................
58977  @........................
58978  @........................
58979  @........................
58980  @........................
58981  @........................

58999 END PROC


# REI RTEN VON TAEDTEN:
# * ONDON UND EW ORK:
#   - EISEN
#   - ARKTPLATZ
#   - OTEL
#   - ANK
#   - UKTIONSHAUS

# * MSTERDAM, OM, ISSABON, ARIS, ERLIN UND AN RANCISCO
#   - EISEN
#   - ALLERIE
#   - OTEL
#   - ANK
#   - UKTIONSHAUS

# * LLE ANDEREN 15 TADTE: LANTAGEN
#   - EISEN
#   - LANTAGE
#   - RBEITER
#   - OTEL
#   - AGER
# NKARA,OMBAY,OLOMBO,OMBASA,UALA,BIDJAN,IO,OGOTA
# UATEMALA,EXICO ITY,AVANA,T.OUIS,ATAVIA,ONGKONG,OKYO

59000 PROC INITCITIES
59005  PRINT "EREISE DIE ELT..."
# 0:AME DER TADT
# 1: ODER  (MPORIUM, ALLERY) ODER IFFER FUER ERSTES RODUKT
# 2:IFFER FUER ZWEITES RODUKT
# 3:IFFER FUER HIPPING OMPANY
59010  DIM TX$(22,3)
59011  OPEN 1,8,3,"CITIES,S,R"
59020  FOR L=0 TO 22

59030   INPUT#1,TX$(L,0),TX$(L,1),TX$(L,2),TX$(L,3)

59070  NEXT
59080  CLOSE 1

59090  PRINT "ORT UND CHRIFT..."
59091  DIM TT$(4)
59092  OPEN 1,8,3,"TEXTS,S,R"
59093  FOR L=0 TO 4
59094   INPUT#1,TT$(L)
59095  NEXT
59096  CLOSE 1

59099 END PROC



# EICHENDEFINITIONEN SETZE ICH ANS ROGRAMMENDE (ODER LADE SIE EINFACH AUS
# EINER ATEI, UND ZWAR VIA , DA MUSS ICH KEINE UECKSICHT AUF DEN RT DES
# ODES IM ROGRAMM NEHMEN). ENN ICH EICHEN LADE, HABE ICH SIE ENTWEDER MIT
# EINEM EIGENS DAFUER GEMACHTEN -ROGRAMM ERZEUGT ODER MIT EINEM HAR-DITOR,
# Z.. DEM VON OLOAK ODER MEGA.

60000 PROC ZEICHEN
60001  DESIGN2,CA+8*0
60002  @.B.BBBB.
60003  @B.BBBB.B
60004  @.B.BB.BB
60005  @BBB..BBB
60006  @BBB..BBB
60007  @BB.BB.B.
60008  @B.BBBB.B
60009  @.BBBB.B.
60010  DESIGN2,CA+8*111
60011  @........
60012  @.BBBBBBB
60013  @.B......
60014  @.B.BBBBB
60015  @.B.B....
60016  @.B.B....
60017  @.B.B....
60018  @.B.B....
60019  DESIGN2,CA+8*119
60020  @........
60021  @BBBBBBBB
60022  @........
60023  @BBBBBBBB
60024  @........
60025  @........
60026  @........
60027  @........
60028  DESIGN2,CA+8*112
60029  @........
60030  @BBBBBBB.
60031  @......B.
60032  @BBBBB.B.
60033  @....B.B.
60034  @....B.B.
60035  @....B.B.
60036  @....B.B.
60037  DESIGN2,CA+8*123
60038  @........
60039  @........
60040  @........
60041  @........
60042  @BBBBBBBB
60043  @........
60044  @BBBBBBBB
60045  @........
60046  DESIGN2,CA+8*116
60047  @.B.B....
60048  @.B.B....
60049  @.B.B....
60050  @.B.B....
60051  @.B.B....
60052  @.B.B....
60053  @.B.B....
60054  @.B.B....
60055  DESIGN2,CA+8*106
60056  @....B.B.
60057  @....B.B.
60058  @....B.B.
60059  @....B.B.
60060  @....B.B.
60061  @....B.B.
60062  @....B.B.
60063  @....B.B.
60064  DESIGN2,CA+8*108
60065  @.B.B....
60066  @.B.B....
60067  @.B.B....
60068  @.B.B....
60069  @.B.BBBBB
60070  @.B......
60071  @.BBBBBBB
60072  @........
60073  DESIGN2,CA+8*124
60074  @....B.B.
60075  @....B.B.
60076  @....B.B.
60077  @....B.B.
60078  @BBBBB.B.
60079  @......B.
60080  @BBBBBBB.
60081  @........
60082  DESIGN2,CA+8*96
60083  @B..BB..B
60084  @.BB..BB.
60085  @.BB..BB.
60086  @B..BB..B
60087  @B..BB..B
60088  @.BB..BB.
60089  @.BB..BB.
60090  @B..BB..B
60999 END PROC