#RetroDevStudio.MetaData.BASIC:2049,Tuned Simons' BASIC,lowercase,10,10

100 COLOUR0,0,1:CA=$E800
105 IFA=0THENA=1:MEM:PRINT"ADE EICHENSATZ":LOAD"CHARSET.V2",0,0,CA
106 IFB=0THENB=1:PRINT"ADE PRITES":LOAD"SPRITES",0,0,$C000
107 IF PEEK(828)<>$AD THEN PRINT"ADE AUSTREIBER":LOAD"MAUS.DRV",0,0,$0334

110 INIT:SCREEN:MENUE
120 NRM:CLS:COLOUR11,12,0
130 END

1000 PROC INIT

1002  CHECK

# PL:RETURN PLANTATION ATTRIBUTES FROM PL$
# TX:FIRST VALUE OF T$. (TRANSPORT DURATION LEFT IN DAYS)
# LB:LOW-BYTE
# HB:HIGH-BYTE
# CT:CURRENT CITY-ID (PLAYER-ID).
#
1003  DEF FN PL(ZZ)=ASC(MID$(PL$,ZZ,1))
1004  DEF FN TX(ZZ)=ASC(LEFT$(T$,1))
1005  DEF FN LB(ZZ)=ZZ-INT(ZZ/256)*256
1006  DEF FN HB(ZZ)=INT(ZZ/256)

1008  INITMOUSE

# MI:MOUSE INPUT ENABLED
# CP:CURRENT PLAYER
# DT(2):DATE 0=DAY,1=MONTH,2=YEAR
# TR$(): TRAVEL-DURATION MATRIX

# SC%(CITY-ID,PRODUCE-SLOT,PLAYER-ID): STORAGE-CITY
# SE%(CITY-ID,PRODUCE-ID,PLAYER-ID): STORAGE-EMPORIUM
# LV%(CITY-ID,PLAYER-ID,TYPE): 0:LAST PROD 0, 1:LAST PROD 1, 2:LAST VISIT

1011  DIM M$(24),F%(1,6),BD$,I,I1,DT(2),DC(11),TR$(19),P(1),SC%(14,1,3),SE%(1,4,3)
1012  DIM LV%(14,3,2)
1013  F=11:FS=12:FB=6:IL=10:ID=0:MI=0:CP=0
1014  T$="":FORX=0TO9:T$=T$+CHR$(X):NEXT


#PD(PLAYER-ID,#): LAYER ATA
#              0: CURRENT CITY
#              1: CASH
#              2: DESTINATION CITY
#              3: TRAVEL DAYS LEFT
1016  DIM PD(1,3)
#     PLAYER STARTS IN ONDON
1017  PD(CP,0)=1:PD(CP,1)=50000
#1017  PD(CP,0)=6:PD(CP,1)=50000

#GS(#): GAME STATE
#   0: CURRENT PLAYER
#   1: CURRENT ROOM
1018  DIM GS(1)
1019  GS(0)=CP:GS(1)=0

# ROOMS:
#  ROOM DEFINES THE NAVIGATION OPTIONS AND WHAT'S DISPLAYED
# HAT MEANS THAT SUB-SECTIONS OF "ROOMS" ARE ALSO ROOMS BY THEMSELVES
# EVEN THOUGH IT MIGHT NOT LOOK LIKE THAT FOR THE PLAYER.
# G BUYING A PLANTATION IS A SEPARATE ROOM JUST AS WELL AS THE PLANTATION
# OVERVIEW, SELLING A PLANTATION AND THE PLANTATION MANAGEMENT SCREEN.

# THE S ARE NOT ORDERED VERY WELL, THE ORDER REFLECTS THE ORDER OF
# DEVELOPMENT.

# 0: CITY HUB EMPORIUM
# 1: CITY HUB GALLERIE
# 2: CITY HUB PLANTATION
# 3: TRAVEL
# 4: HOTEL
# 5: GALLERIE
# 6: BANK
# 7: AUKTIONSHAUS
# 8: PLANTATION
# 9: LAGER MAINMENU (CHOOSE BETWEEN TRANSPORT AND DATES)
#10: MARKTPLATZ
#11: EXPEDITION

#12: BUY PLANTATION
#13: SELL PLANTATION
#14: MANAGE PLANTATION

#16: TRANSPORT PRODUCT

#17: OVERVIEW
#18: SELECT PRODUCE FROM 4 (FOR TRANSPORT OR SALE IN EMPORIUM)
#20: WORKERS

# : ADD KEY TO ROOM-OPTIONS TO SET TARGET AND LABEL INDEPENDENTLY
# ROOM-OPTIONS(ROOM-ID,KEY,VALUE)
#  KEY: 0=ROOM LABEL (SHOWN IN NAVIGATION), 1=OPTION-TARGET
#  VALUE: ACCORDING TO THE KEY
# RC:ROOM COUNT
1020  RC=20:DIM RO%(RC,1,6)
1021  RO%(0,1,0)=3:RO%(0,1,1)=10:RO%(0,1,2)=4:RO%(0,1,3)=6:RO%(0,1,4)=7:RO%(0,1,5)=17
1022  RO%(1,1,0)=3:RO%(1,1,1)=5 :RO%(1,1,2)=4:RO%(1,1,3)=6:RO%(1,1,4)=7:RO%(1,1,5)=17
1023  RO%(2,1,0)=3:RO%(2,1,1)=8 :RO%(2,1,2)=20:RO%(2,1,3)=4:RO%(2,1,4)=6:RO%(2,1,5)=9:RO%(2,1,6)=17
1024  RO%(3,1,0)=128:RO%(3,1,1)=-1
#1025  RO%(4,0)=128:RO%(4,1)=-1
1026  RO%(5,1,0)=1:RO%(5,1,1)=-1
1027  RO%(6,1,0)=128:RO%(6,1,1)=-1
1028  RO%(7,1,0)=128:RO%(7,1,1)=-1

1029  RO%(8,1,0)=12:RO%(8,1,1)=13:RO%(8,1,2)=14:RO%(8,1,3)=2

1030  RO%(9,1,0)=2:RO%(9,1,1)=-1
#1031  RO%(10,0)=18:RO%(10,1)=19:RO%(10,2)=20:RO%(10,3)=128
1032  RO%(11,1,0)=2:RO%(11,1,1)=-1
1033  RO%(12,1,0)=15:RO%(12,1,1)=15:RO%(12,1,2)=8
1034  RO%(13,1,0)=0:RO%(13,1,1)=-1
1035  RO%(14,1,0)=0:RO%(14,1,1)=-1
1037  RO%(17,1,0)=128:RO%(17,1,1)=-1

1038  RO%(20,1,0)=21:RO%(20,1,1)=22:RO%(20,1,2)=23:RO%(20,1,3)=24:RO%(20,1,4)=128


1100  RO%(0,0,0)=3:RO%(0,0,1)=10:RO%(0,0,2)=4:RO%(0,0,3)=6:RO%(0,0,4)=7:RO%(0,0,5)=17
1101  RO%(1,0,0)=3:RO%(1,0,1)=5 :RO%(1,0,2)=4:RO%(1,0,3)=6:RO%(1,0,4)=7:RO%(1,0,5)=17
1102  RO%(2,0,0)=3:RO%(2,0,1)=8 :RO%(2,0,2)=20:RO%(2,0,3)=4:RO%(2,0,4)=6:RO%(2,0,5)=9:RO%(2,0,6)=17
1103  RO%(3,0,0)=128:RO%(3,0,1)=-1

1105  RO%(5,0,0)=0:RO%(5,0,1)=-1
1106  RO%(6,0,0)=128:RO%(6,0,1)=-1
1107  RO%(7,0,0)=128:RO%(7,0,1)=-1

1108  RO%(8,0,0)=12:RO%(8,0,1)=13:RO%(8,0,2)=14:RO%(8,0,3)=0

1109  RO%(9,0,0)=0:RO%(9,0,1)=-1

1111  RO%(11,0,0)=0:RO%(11,0,1)=-1
1112  RO%(12,0,0)=15:RO%(12,0,1)=15:RO%(12,0,2)=8
1113  RO%(13,0,0)=0:RO%(13,0,1)=-1
1114  RO%(14,0,0)=0:RO%(14,0,1)=-1
1116  RO%(17,0,0)=128:RO%(17,0,1)=-1

1117  RO%(20,0,0)=21:RO%(20,0,1)=22:RO%(20,0,2)=23:RO%(20,0,3)=24:RO%(20,0,4)=128

#     XM(0)=MINIMUM X-COORDINATE FOR SPRITE ON PLANTATION
#     YM(0)=MINIMUM Y-COORDINATE FOR SPRITE ON PLANTATION
#     XM(1) AND YM(1) ARE ACCORDING IMUM COORDINATES
1340  DIM XM(2),YM(2),T(11):XM(2)=24:YM(2)=50
1342  XM(0)=XM(2)+16:YM(0)=YM(2)+6*8
1344  XM(1)=XM(0)+21*8:YM(1)=YM(0)+15*8

# CM%(ROOM-ID,#): CHOICEMENU
# 0: INPUT-LENGTH (PREVIOUSLY VARIABLE IL)
# 1: OPTION COUNT (PREVIOUSLY VARIABLE OC)
1450  DIM CM%(RC,1)
1451  CM%(0,0)=10:CM%(0,1)=5
1452  CM%(1,0)=10:CM%(1,1)=5
1453  CM%(2,0)=10:CM%(2,1)=6
1454  CM%(3,0)=11:CM%(3,1)=21
1455  CM%(4,0)=10:CM%(4,1)=2
1456  CM%(5,0)=10:CM%(5,1)=0
1457  CM%(6,0)=10:CM%(6,1)=0
1458  CM%(7,0)=10:CM%(7,1)=0
1459  CM%(8,0)=10:CM%(8,1)=3
1460  CM%(9,0)=18:CM%(9,1)=2
1461  CM%(10,0)=10:CM%(10,1)=3
1462  CM%(11,0)=10:CM%(11,1)=0
1463  CM%(12,0)=10:CM%(12,1)=2
1464  CM%(13,0)=10:CM%(13,1)=0
1465  CM%(14,0)=10:CM%(14,1)=0
1466  CM%(15,0)=10:CM%(15,1)=1
1467  CM%(16,0)=10:CM%(16,1)=2
1468  CM%(17,0)=10:CM%(17,1)=0
1469  CM%(18,0)=7:CM%(18,1)=4
1470  CM%(19,0)=10:CM%(19,1)=0
1472  CM%(20,0)=10:CM%(20,1)=4

1479  DT(0)=1:DT(1)=1:DT(2)=1918
# DC():DAY COUNTS (0=JANUARY, 11=DECEMBER)
1480  DC(0)=31:DC(1)=28:DC(2)=31:DC(3)=30:DC(4)=31:DC(5)=30
1481  DC(6)=31:DC(7)=31:DC(8)=30:DC(9)=31:DC(10)=30:DC(11)=31

# LAST-VISIT AND LAST-HARVEST DATA
# INIT LV%(Y,X) TO -1
1500  FOR Y=0 TO 3:FOR X = 0 TO 14:LV%(X,Y,2)=-1:NEXT:NEXT

1600  M$(0)="USGANG":M$(1)="":M$(2)="":M$(3)="EISEN"
1610  M$(4)="OTEL":M$(5)="ALERIE":M$(6)="ANK":M$(7)="UKTION"
1620  M$(8)="LANTAGE":M$(9)="AGER":M$(10)="ARKT":M$(11)="XPEDITION"

# LANTAGE
1630  M$(12)="AUFEN":M$(13)="ERKAUFEN":M$(14)="ERWALTEN":M$(17)="EBERSICHT"
1631  M$(18)="":M$(19)="":M$(20)="RBEITER":M$(21)="INSTELLEN"
1632  M$(22)="NTLASSEN":M$(23)="OHNHOEHE":M$(24)="BWERBEN"

# 30717
# 30170 =  547
# 22608 = 8109

# LANTATION
#PL$(PLANTATION-ID,$): PLANTATION-DATA
# TRING, CONTAINING 1 BYTE EACH FOR
#  0 X-COORDINATE (ABSOLUTE ON SCREEN)
#  1 Y-COORDINATE (ABSOLUTE ON SCREEN)
#  2 WIDTH
#  3 HEIGHT
#  4 SEED: ABAK,AFFEE,AKAO,EE,EIDE
#  5 PRODUCTIVITY: 0, 100, 110
#  6 X-COORDINATE (INSIDE THE PLANTATION AREA)
#  7 Y-COORDINATE (INSIDE THE PLANTATION AREA)
#  8 SIZE: WIDTH*HEIGHT MINUS OCCUPIED SPOTS (WATER, BUSHES, ROCKS, ...)
#  9 OWNER: PLAYER-ID OF OWNER
# 10 TOWN: TOWN-ID (MINUS 6). 

# 15325
# 14895

#PP$(PLAYER-ID) - PLAYER-PLANTATION ASSIGNMENT
#
1700 DIM PL$(179),PP$(3),PC$(14),CF$(4),PR(179),T$(9),PT$(3)
1701 PI=0:CF$(0)="####### ":CF$(1)="### HA":CF$(2)="## AGE":CF$(3)="#### T"
1702 CF$(4)="#### "

#T$() - GOODS-TRANSPORT DATA
# USED TO KEEP TRACK OF TRANSPORT PROGRESS OF GOODS (IE FROM PLANTATION TO EMPORIUM)
# TRANSPORT DAYS LEFT
# PLAYER-ID
# PRODUCE
# VOLUME
# DESTINATION
# DATE OF ARRIVAL




# POKE ADDRESSES
# 0: TIMER
# 1: CHARSET
1800  P(0)=$C516:P(1)=$CC00

1805  RESET 58250

1810  FOR I=1 TO 9
1815   READ A:BD$=BD$+CHR$(A)
1820  NEXT

1825  RESET 2000

1830  FOR I=1 TO 6
1835   READ F%(0,I)
1840  NEXT
1845  FOR I=1 TO 6
1850   READ F%(1,I)
1855  NEXT

#1310  ZEICHEN
1920  INITCITIES

1990 END PROC


# ARBEN
2000 DATA 15, 9,11, 2, 5, 6
2010 DATA  1, 2,15,10,13,14


# N MENUE FINDET DIE ROGRAMMSTEUERUNG STATT (CHLEIFE MIT
# ). CH LESE ZUR ERMEIDUNG VON TRINGMUELL UND ZUR BLAUFBESCHLEUNIGUNG
# DEN ASTENDRUCK BEI  DIREKT AUS DEM INGABEPUFFER AUS (512). UR E-
# FUELLUNG DES ENUES DIENT ' ITEMS'.

# ILDSCHIRMMASKE
# CLEARS SCREEN AND RE-BUILDS FROM SCRATCH WHAT'S IN GS(1)
# IL: ITEM LENGTH (MAX CHARACTERS OF MENU-ITEM)
# OC: OPTION COUNT (NR OF MENU ITEMS)
6800 PROC SCREEN
6810  IF GS(1)<12 OR GS(1)=20 THEN FILL 0,0,40,25,0,15
6811  COLOUR,1

6815  PRINT AT(0,0) GS(1)

6820  IF GS(1)=0 THEN OHUBEMP:END PROC
6821  IF GS(1)=1 THEN OHUBGAL:END PROC
6822  IF GS(1)=2 THEN OHUBPLA:END PROC
6823  IF GS(1)=3 THEN OTRA:END PROC
6825  IF GS(1)=4 THEN OHOT:END PROC
6827  IF GS(1)=5 THEN OGAL:END PROC
6828  IF GS(1)=6 THEN OBAN:END PROC
6829  IF GS(1)=7 THEN OAUC:END PROC
6830  IF GS(1)=8 THEN OPLA:END PROC
6831  IF GS(1)=9 THEN OWAR:END PROC
6832  IF GS(1)=10 THEN OMAR:END PROC
6833  IF GS(1)=11 THEN OEXP:END PROC

# UY PLANTATION
6834  IF GS(1)=12 THEN OPLABUY:END PROC
# ELL PLANTATION
6835  IF GS(1)=13 THEN OPLASEL:END PROC
# MANAGE PLANTATION
6836  IF GS(1)=14 THEN OPLAMAN:END PROC

# PLANT PLANTATION
#6837  IF GS(1)=15 THEN OPLAPLANT

#6838  IF GS(1)=16 THEN OTRA
6837  IF GS(1)=17 THEN OOVE:END PROC

#6838  IF GS(1)=18 THEN OSEL4PRO:END PROC
6839  IF GS(1)=19 THEN OMARDATE:END PROC

6840  IF GS(1)=20 THEN OWOR:END PROC

#6841  IF GS(1)=21 THEN OSELQUA:END PROC


#6869  IF GS(1)=99 THEN OJOURNEY

6870 END PROC

# ALENDER FUER TADTBILDSCHIRME
6880 PROC CAL

6882  BX=1:BY=5:BW=8:BH=5:FRAME
6884  CENTER AT(BY+1,BX) STR$(DT(0)),BW-1
6885  CENTER AT(BY+2,BX) TT$(DT(1)+4),BW
6886  CENTER AT(BY+3,BX) STR$(DT(2)),BW

6889 END PROC

########################
# KTUELLER RT UND ATUM
# ANK, LANTAGE, ITYHUB, ALLERIE
# LOC-DATE-CASH HEADER
6900 PROC LDCHDR

6901  BX=1:BY=1:BW=26:BH=3:FRAME
6902  PRINT AT(BY+1,BX+1) "PIELER"CP"IN "TX$(PD(CP,0),0);

# NZEIGE ARVERMOEGEN
6903  BX=27:BY=1:BW=12:BH=3:FRAME
6904  USE AT(BY+1,BX+1) CF$(0),PD(CP,1);

6909 END PROC


################
# USWAHLMENUE
# UEBERALL AUSSER EISEN
# TV:TEMP VALUE
# OC:OPTION COUNT
6910 PROC CHOICEMENU

6911  OC=CM%(GS(1),1)
6912  BX=27:BY=20-OC:BW=CM%(GS(1),0)+2:BH=3+OC:FRAME

#     IN ENUE BEFUELLEN
6914  FOR I1=0 TO OC

#      INEN EINZELNEN ENUEPUNKT AUSGEBEN
6916   TV=RO%(GS(1),0,I1)
6918   IF TV=128 THEN TV=0
6920   IF TV>=0 THEN PRINT AT(BY+I1+1,BX+1) M$(TV);

6922  NEXT

6923  TAG

6924 END PROC



######
# GENERIC BOX WITH TEXT
#######
6930 PROC BOXWITHTEXT

6932  BX=1:BY=6:BW=20:BH=5:FRAME
6934  CENTER AT(BY+2,BX)TX$,BW

6939 END PROC


# EACH OF THE FOLLOWING 1000-LINES SECTIONS HANDLES ONE ROOM
# EACH OF THE HANDLERS CONSISTS OF 3 MAIN PROCEDURES
# INPUT, LOGIC, OUTPUT
# INPUT IS CALLED BY THE HANDLEENTER DISPATCH METHOD
# LOGIC IS USUALLY CALLED BY THE INPUT PART AND CONTAINS THE ACTUAL GAME-CODE
# OUTPUT DEALS WITH RENDERING THE SCREEN, BASED ON THE ROOM'S DATA


###################
# TADTBILDSCHIRM MPORIUM 0 #
###################
7000 PROC OHUBEMP

7005  LDCHDR:CAL
7010  CHOICEMENU

7199 END PROC

###################
# TADTBILDSCHIRM ALLERIE 1 #
###################
8000 PROC OHUBGAL

8005  LDCHDR:CAL
8010  CHOICEMENU

8199 END PROC


###################
# TADTBILDSCHIRM LANTAGE 2 #
###################

# TT$() CONTAINS GENERIC TEXTS.
#       0-4  ARE AVAILABLE PRODUCES
#       5-16 ARE MONTHS OF THE CALENDAR
9000 PROC OHUBPLA

9005  LDCHDR:CAL

#     TV:TEMP-VALUE FOR CITY-ID MINUS 6
9010  TV=PD(CP,0)-6:T(0)=0:T(1)=0

#     NO PLANTATIONS OF THIS PLAYER IN THIS CITY? SKIP SIZE CALCULATION
9015  IF LEN(PC$(TV))=0 THEN 9110

#     CALCULATE TOTAL SIZE OF PLANTATIONS PER PRODUCE IN THIS CITY
9020  FOR PX=1 TO LEN(PC$(TV))
9025   PL$=MID$(PC$(TV),PX,1)
9030   PL$=PL$(ASC(PL$))

# ITERATING PLANTATIONS OF CURRENT CITY
#  SUMARIZE SIZE OF PLANTATIONS PER PRODUCE THAT BELONG TO CURRENT PLAYER
#   PRODUCE=FN PL(12)
#   OWNER=FN PL(10)
#   SIZE=FN PL(9)
9035   IF FNPL(10)=CP THEN T(FNPL(12))=T(FNPL(12))+FNPL(9)

9040  NEXT

#     PRINT PLANTATION SIZES
9110  BX=15:BY=5:BW=24:BH=5:FRAME
9115  PRINT AT(BY+1,BX+1) "NBAUFLAECHEN"
9120  PRINT AT(BY+2,BX+2) TT$(VAL(TX$(PD(CP,0),1)));
9125  USE AT(BY+2,BX+16) CF$(1),T(0)
9130  PRINT AT(BY+3,BX+2) TT$(VAL(TX$(PD(CP,0),2)));
9135  USE AT(BY+3,BX+16) CF$(1),T(1)


9150  BX=1:BY=12:BW=24:BH=11:FRAME

#     LV%() RECORDS ONLY FOR PLANTATIONS. SO, CITY-INDEX IS 6 LESS
9152  IF LV%(TV,CP,2)>=0 THEN TX$="ETZTER ESUCH VOR":ELSE TX$="RSTER ESUCH"
9154  PRINT AT(BY+1,BX+1) TX$;

9155  RCOMP PRINT AT(BY+2,BX+2) STR$(LV%(PD(CP,0)-6,CP,2))+" AGEN";

#     CHECK HARVEST SINCE LAST VISIT
9160  IF LV%(TV,CP,0)=0 THEN IF LV%(TV,CP,1)=0 THEN TX$="EINE RNTE":GOTO 9180
9161  TX$="RNTE:"

#     SHOW HARVESTED QUANTITIES SINCE LAST VISIT
9162  Y=BY+5
9164  IF LV%(TV,CP,0)>0 THEN DO
9166   PRINT AT(Y,BX+2) TT$(VAL(TX$(PD(CP,0),1)))
9168   USE AT(Y,BX+10) CF$(3),LV%(TV,CP,0):Y=Y+1
9170  DONE

9172  IF LV%(TV,CP,1)>0 THEN DO
9174   PRINT AT(Y,BX+2) TT$(VAL(TX$(PD(CP,0),2)))
9176   USE AT(Y,BX+10) CF$(3),LV%(TV,CP,1)
9178  DONE

9180  PRINT AT(BY+4,BX+1) TX$;

#     SHOW HIRED WORKERS
9185  PRINT AT(BY+8,BX+1) "RBEITER:"
9188  PRINT AT(BY+9,BX+1) "OHN:"


9195  CHOICEMENU

9199 END PROC



###################
# EISEBILDSCHIRM 3 #
###################

# TRAVELCOST (ONDON/NKARA 413
# TRAVELDURATION (ONDON/NKARA 1.-8.)



#INPUT
#PD(X,Y):PLAYERDATA
# X:PLAYER-ID
# Y0:CURRENT CITY
# Y1:CURRENT CASH
# Y2:DESTINATION CITY
# Y3:TRAVEL DAYS LEFT
# LV%:LAST VISIT (CITY-ID, PLAYER-ID)
10000 PROC ITRA

10005  IF ID>=21 OR ID=PD(CP,0) THEN ID=0:FCC:SCREEN:END PROC

#      SET LAST VISIT AND HARVESTS IN THIS CITY OF THIS PLAYER TO ZERO (IF PLANTATION)
10010  IF PD(CP,0)>=6 THEN TV=PD(CP,0)-6:FOR X=0TO2:LV%(TV,CP,X)=0:NEXT

#      SET DESTINATION CITY AND TRAVEL DAYS LEFT
10015  PD(CP,2)=ID:LTRADA

#      REMOVE LIST OF CITIES
10020  FILL 0,26,14,25,0,15

#      DISPLAY DIALOG FOR TRAVELCOST
10025  BX=1:BY=21:BW=24:BH=3:FRAME
10030  PRINT AT(BY+1,BX+1) "EISEKOSTEN";
10031  DM=413
10032  USE AT(BY+1,BX+14) CF$(0),DM:LDECMONEY
10034  PAUSE 3


#      OJOURNEY DISPLAYS TRAVEL PROGRESS AND SETS GS(1) TO 99
10035  OJOURNEY

10040 END PROC

# LOOKUP TRAVELDAYS
#  READS FROM
#  - PD(CP,2) (DESTINATION CITY)
#  - PD(CP,0) (CURRENT CITY)
#  WRITES TO
#  - PD(CP,3) (TRAVEL DURATION)

10050 PROC LTRADA

# LOOKUP-LOGIC FROM TR$()
# T1=SMALLER-ID, T2=LARGER-ID
10055  IF PD(CP,2)<PD(CP,0) THEN T1=PD(CP,2):T2=PD(CP,0):ELSE T1=PD(CP,0):T2=PD(CP,2)

10060  PD(CP,3)=ASC(MID$(TR$(T1),(T2-T1),1))

10099 END PROC


#OUTPUT
10800 PROC OTRA
10801  GS(1)=3
#     RAHMEN FUER WELTKARTE
10810  BX=1:BY=1:BW=24:BH=18:FRAME

#     ANZEIGE SPIELERNAME UND AKTUELLE STADT
10820  BX=1:BY=21:BW=24:BH=3:FRAME
10825  PRINT AT(BY+1,BX+1) "PIELER"CP"IN " TX$(PD(CP,0),0);

#     AUSWAHL DER STADT
10830  BX=26:BY=0:BW=13:BH=24:FRAME

10840  FOR I1=0 TO 20
10850   PRINT AT(BY+I1+1,BX+1) TX$(I1,0);
10860  NEXT

10870  PRINT AT(BY+21+1,BX+1) M$(0)+" ";

10875  TAG

10880 END PROC




#########
# OTEL 4 #
#########
#  PTIONS
#  - TAY FOR 7 DAYS
#  - TAY UNTIL 1ST OF NEXT MONTH
#  - EFINE LENGTH OF STAY


12000 PROC OHOT
#      OC=2 -> 3 MENU ENTRIES
#      IF MORE MENUE ENTRIES NEEDED (AUCTION-DATE, ETC), CM%(4,2) MUST BE CHANGED)
12001  GS(1)=4:OC=2 
12010  LDCHDR

12020  TX$="OTEL":BOXWITHTEXT

12022  BX=27:BY=20-OC:BW=12:BH=3+OC:FRAME

12030  PRINT AT(BY+1,BX+1) "7 AGE";
#       TV:TEMP-VALUE (NEXT MONTH)
12031  TV=DT(1)+1:IF TV>11 THEN TV=0
12032  PRINT AT(BY+2,BX+1) "BIS 1."(TT$(TV+5));
12034  PRINT AT(BY+3,BX+1) M$(0);

12048  ID=0:TAG

12049 END PROC


# INPUT HOTEL SCREEN

12200 PROC IHOT

12210  IF ID>1 THEN FCC:ID=0:SCREEN:END PROC

#      ADD 7 DAYS TO TRAVELDURATION
12220  IF ID=0 THEN PD(0,3)=7
#      ADD REMAINING DAYS OF MONTH TO TRAVELDURATION
12230  IF ID=1 THEN PD(0,3)=DC(DT(1)-1)-DT(0)+1

#      SET DESTINATION CITY TO CURRENT CITY
12240  PD(0,2)=PD(0,0)

#      SET LAST VISIT TO ZERO
12245  IF PD(CP,0)>=6 THEN FORX=0TO2:LV%(PD(CP,0)-6,CP,X)=0:NEXT

#      DISPLAY JOURNEY SCREEN
12250  OJOURNEY

12299 END PROC




########
# ANK 6 #
########
13000 PROC OBAN
13001  GS(1)=6
13010  LDCHDR

#     TRESORE
13020  BX=1:BY=3:BW=38:BH=10:FRAME

#     LISTE DER AKTIENKURSE
13030  BX=1:BY=15:BW=22:BH=6:FRAME

13040  CHOICEMENU

13050 END PROC


###########
# ALERIE 5 #
###########
14000 PROC OGAL
14001  GS(1)=5

14010  LDCHDR
14020  TX$="ALERIE":BOXWITHTEXT
14030  CHOICEMENU

14040 END PROC



###########
# UKTION 7 #
###########
15000 PROC OAUC
15001  GS(1)=7

15010  LDCHDR
15020  TX$="UKTION":BOXWITHTEXT
15030  CHOICEMENU

15040 END PROC


############
# LANTAGE 8 #
############
16000 PROC OPLA
16001  GS(1)=8

16005  LDCHDR

# DRAW PLANTATION AREA
16010  DRPLA
16015  CHOICEMENU

16020 END PROC

###################
# RAW LANTATION #
###################
16030 PROC DRPLA

#      DRAW GRASS
16035  BX=1:BY=5:BW=25:BH=19:FRAME
16040  FILL BY+1,BX+1,BW-2,BH-2,96,5

# TV:CITY-ID (TEMP-VALUE)
16045  TV=PD(CP,0)-6

#      NO PLANTATIONS IN THIS TOWN
16050  IF LEN(PC$(TV))=0 THEN END PROC

# PC$() PLANTATIONS OF THIS CITY
#       1 CHARACTER = 1 PLANTATION-ID
16055  FOR PX=1 TO LEN(PC$(TV))
16060   PL$=MID$(PC$(TV),PX,1)
16065   PL$=PL$(ASC(PL$))
16070   FOR IX=0 TO 11
16075    T(IX)=FN PL(IX+1)
16080   NEXT
16085   FILL T(0),T(1),T(2),T(3),T(4),T(5)
16087   FILL T(6)+6,T(7)+2,2,2,48+1,1

16090  NEXT

16099 END PROC




##################
# BUY PLANTATION 12 #
##################
17000 PROC OPLABUY
17010  GS(1)=12

17015  BX=27:BY=5:BW=12:BH=4:FRAME
17016  PRINT AT(BY+1,BX+1) "ANDPREIS"
17017  USE AT(BY+2,BX+2) CF$(0),291

17020  BX=27:BY=18:BW=12:BH=5:FRAME
#      CHOICE MENU FOR PRODUCE SELECTION
17022  OPRODFRAME

17030 END PROC

# SHOW FRAME FOR PRODUCE SELECTION
17040 PROC OPRODFRAME
17042  PRINT AT(BY+1,BX+1) TT$(VAL(TX$(PD(CP,0),1)));
17044  PRINT AT(BY+2,BX+1) TT$(VAL(TX$(PD(CP,0),2)));
17046  PRINT AT(BY+3,BX+1) M$(0);

17048  ID=0:TAG
17049 END PROC

########################

17100 PROC IPLABUY

17102  IF ID<2 THEN OPLAPLANT:END PROC

17110  IF ID=2 THEN WIPEPD:GS(1)=8:ID=0:CHOICEMENU:END PROC
17120 END PROC

#########################



####################
# PLANT PLANTATION 15 #
####################
17500 PROC OPLAPLANT
17502  GS(1)=15

#      DRAW FRAME FOR VARIABLE PURCHASE DATA
17503  BX=27:BY=9:BW=12:BH=9:FRAME
17504  PRINT AT(10,28) "ROD";
17505  PRINT AT(12,28) "L]CHE";
17507  PRINT AT(15,28) "UMME";

# DW=DRAW SPRITE (FLAG)
# XM(0) = MINIMUM X-COORDINATE
# XM(1) = MAXIMUM Y-COORDINATE
# SAME FOR YM(0) AND YM(1)
17509  SX=XM(0)+16:SY=YM(0)+16:TX=2:TY=2:T3=384:T4=0

# SPRITE-NR,BLOCK,COLOR,PRIO,TYPE,SIZE
# 1,1,BLACK,DONT SHOW,HIRES
17510  MMOB1,SX-17,SY-17:MMOB3,SX-17,SY+12:MMOB5,SX,SY

17511  MOBON1:MOBON3:MOBON5
17512  DW=0:PQ=0

17513  CHKPLNT

#17514  POKE 0,65

17515  REPEAT
17520   KEYGET I$:I=PEEK(512)

17525   IF I=145 THEN DO
17526    SY=SY-8:IF SY>=YM(0) THEN TY=TY-1:DW=-1:ELSE SY=YM(0)
17527   DONE
17528   IF DW THEN 17575

17535   IF I=17 THEN DO
17536    SY=SY+8:IF SY<=YM(1) THEN TY=TY+1:DW=-1:ELSE SY=YM(1)
17537   DONE
17538   IF DW THEN 17575

17545   IF I=157 THEN DO
17546    SX=SX-8:IF SX>=XM(0) THEN TX=TX-1:DW=-1:ELSE SX=XM(0)
17547   DONE
17548   IF DW THEN 17575

17555   IF I=29 THEN DO
17556    SX=SX+8:IF SX<=XM(1) THEN TX=TX+1:DW=-1:ELSE SX=XM(1)
17557   DONE
17558   IF DW THEN 17575

17560   IF I=13 THEN IF OK THEN PQ=-1
17565   IF I=95 THEN OK=0:PQ=-1

17570   GOTO 17580

17575   CHKPLNT

#       DRAW SPRITES
17578   MMOB1,SX-17,SY-17:MMOB3,SX-17,SY+12:MMOB5,SX,SY
17579   DW=0

17580  UNTIL PQ=-1

#17581  POKE 0,64

17582  MOBOFF1:MOBOFF3:MOBOFF5

17584  IF NOT OK THEN WIPEPD:GS(1)=8:ID=0:CHOICEMENU:END PROC

17585  LPLAOK

17587  BX=27:BY=19:BW=12:BH=4:FRAME
17588  PRINT AT(BY+1,BX+1) "EST]TIGEN";
17589  PRINT AT(BY+2,BX+1) "BBRECHEN";
17590  ID=0:TAG

17599 END PROC


#     CHECK IF HOUSE-SPRITE SHOULD BE RED
#      AND CALCULATE FLEXIBLE VALUES (AREA, TOTAL PRICE, PRODUCTIVITY)
17600 PROC CHKPLNT

#      TV:MEMORY LOCATION OF BUILDING IN SCREEN-RAM
17610  TV=P(1)+TX+2+((TY+6)*40)

#      CHECK IF ALL SQUARES OF BUILDING ARE AVAILABLE
#      T2:VALUE AT TV
17620  T2=PEEK(TV):TV=TV+1:T2=T2+PEEK(TV):TV=TV+39
17622  T2=T2+PEEK(TV):TV=TV+1:T2=T2+PEEK(TV)

17624  OK=T2=T3

#      CHECK FOR 384 (=96X4). IF ONE FIELD IS DIFFERENT, SHOW RED
17626  IF NOT OK THEN MOBCOL 5,2:GOTO 17699

17630  CALCPLASIZE

#      WILL BE 110% IF PLANTATION TOUCHES WATER (STAGE 2 IMMEDIATELY)
17642  PRINT AT(10,33) "100 %";
17644  USE AT(13,32) CF$(1),T(8);

17645  M=T(8)*291
17646  USE AT(16,29) CF$(0),M;

#      INSUFFICIENT FUNDS
17650  IF PD(CP,1)-M < 0 THEN OK=0:MOBCOL 5,2:FCOL 16,29,9,1,2:GOTO 17699

17660  OK=-1:FCOL 16,29,9,1,1
17665  MOBCOL 5,1

17699 END PROC


###############

17700 PROC IPLAPLANT

17710  IF ID=0 THEN LPLABOOK:LDCHDR:GOTO 17714

#      RE-DRAW PLANTATION
17712  DRPLA

#      REMOVE WINDOW WITH PURCHASE DATA
17714  WIPEPD
17716  GS(1)=8:ID=0:CHOICEMENU

17719 END PROC

# WIPE PURCHASE DATA
17720 PROC WIPEPD
17725  FILL 5,27,13,13,0,15
17729 END PROC


# LOGIC: PLANTATION CONFIRMED OK

# T 0=Y-COORDINATE ABSOLUTE ON SCREEN
#   1=X-COORDINATE -"-
#   2=WIDTH
#   3=HEIGHT
#   4=SCREEN-CODE OF PRODUCE CHARACTER (TEA=97, +1FF FOR OTHERS)
#   5=COLOR OF PRODUCE CHARACTER (EG TEA=YELLOW, SILK=WHITE, OTHERS=DGRAY)
#   6=Y-COORDINATE IN FIELD
#   7=X-COORDINATE IN FIELD
#   8=SIZE (X*Y FOR NOW, CAN BE LOWER LATER)
#   9=OWNER OF PLANTATION
#  10=TOWN OF PLANTATION
#  11=STORAGE INDEX OF PRODUCE IN TOWN (0 OR 1)

17730 PROC LPLAOK

17732  T(6)=TY:T(7)=TX
17734  T(4)=VAL(TX$(PD(CP,0),ID+1))+97
17735  T(11)=ID

17736  IF ID=0 THEN T(5)=7:GOTO 17740
17737  IF ID<4 THEN T(5)=15:GOTO 17740
17738  T(5)=1

17740  CALCPLASIZE

17750  FILL T(0),T(1),T(2),T(3),T(4),T(5)
17760  FILL TY+6,TX+2,2,2,48+1,1

17769 END PROC

##############
# CALCULATE SIZE OF PLANTATION #
#
# TY:
# T(0):Y-COORD
# T(1):X-COORD
# T(2):WIDTH
# T(3):HEIGHT
# T(8):SIZE OF PLANTATION

17770 PROC CALCPLASIZE

17771  T(0)=TY+4:T(1)=TX:T(2)=6:T(3)=6

17772  IF T(0)<6 THEN T(3)=6-(6-T(0)):T(0)=6
17773  IF T(1)<2 THEN T(2)=6-(2-T(1)):T(1)=2

17774  IF T(0)>17 THEN T(3)=6-(T(0)-17)
17775  IF T(1)>19 THEN T(2)=6-(T(1)-19)

17776  T(8)=T(2)*T(3)

17799 END PROC

# THIS IS THE BOOKKEEPING TO CREATE THE NEW PLANTATION AND
#  ADD IT TO THE GLOBAL PLANTATION LIST PL$()
#  ASSIGN IT TO THE CITY PC$() "PLANTATION-CITY". FIRST PLANTATION-TOWN IS ZERO (NOT 6)
#  ASSIGN IT TO THE PLAYER PP$()
#  
#  PI:NEXT AVAILABLE PLANTAGE INDEX
#
#  GLOBAL PLANTATION-INDEX: PL$()      - FOR DAILY CALCULATION OF ALL PRODUCTIONS
#  TOWN-PLANTATION ATTRIBUTION PC$()   - 
#  PLAYER-PLANTATION ATTRIBUTION PP$() - TO ATTRIBUTE WAGES OF PLANTATION TO PLAYER

17800 PROC LPLABOOK

# 0-3: COORDINATES AND SIZE OF PLANTATION
# 4: PRODUCE
# 5: COLOR
17810  FOR IX=0 TO 8
17815   PL$(PI)=PL$(PI)+CHR$(T(IX))
17820  NEXT

# PRODUCE OF PLANTATION
# 17825  PL$(PI)=PL$(PI)+CHR$(ID)

#      PUT CURRENT CITY-ID INTO TV (TEMP VALUE)
#      -6 BECAUSE CITIES 0-5 DON'T HAVE PLANTATIONS. WE SAVE SOME SPACE HERE
17830  TV=PD(CP,0)-6

#      STORE OWNER (9) AND TOWN (10)
17835  PL$(PI)=PL$(PI)+CHR$(CP)+CHR$(TV)

17836  PL$(PI)=PL$(PI)+CHR$(T(11))

#      ASSIGN PLANTATION TO CITY
17840  PC$(TV)=PC$(TV)+CHR$(PI)

#      ASSIGN PLANTATION TO PLAYER
17850  PP$(CP)=PP$(CP)+CHR$(PI)

#      PI:CURRENTLY FREE PLANTATION-ID
17855  PI=PI+1

#      REDUCE MONEY OF PLAYER
17860  DM=T(8)*291:LDECMONEY

17999 END PROC



###################
# SELL PLANTATION 13 #
###################
18000 PROC OPLASEL
18001  GS(1)=13
18010  TX$="LANTAGE VERKAUFEN":BOXWITHTEXT
18020  CHOICEMENU
18099 END PROC

######################

18100 PROC IPLASEL
18110  GS(1)=8:ID=0:SCREEN
18120 END PROC



#####################
# MANAGE PLANTATION 14 #
#####################
19000 PROC OPLAMAN
19001  GS(1)=14
19010  TX$="LANTAGE VERWALTEN":BOXWITHTEXT
19020  CHOICEMENU
19099 END PROC

19100 PROC IPLAMAN
19110  GS(1)=8:ID=0:SCREEN
19120 END PROC


#############
# AREHOUSE 9 #
#############
# WAREHOUSE IS AT THE PLANTATION
# THE ONE AT THE EMPORIUM CITY IS CALLED MARKETPLACE
20000 PROC OWAR
# 20001  GS(1)=9. COMMENTED, BECAUSE IS SET IN OWARCHOICE

#      LOCATION-DATE-CASH HEADER
20010  LDCHDR

20015  TV=PD(CP,0)-6

#      STATIC TEXTS
20020  BX=1:BY=5:BW=38:BH=8:FRAME
20021  CENTER AT(BY+1,BX+12) TT$(VAL(TX$(PD(CP,0),1))),7
20022  CENTER AT(BY+1,BX+20) TT$(VAL(TX$(PD(CP,0),2))),7
20023  PRINT AT(BY+1,BX+28) "RACHTK/T";
20024  PRINT AT(BY+3,BX+1) "AGERND";
20026  PRINT AT(BY+5,BX+1) "ONDON/T";
20028  PRINT AT(BY+6,BX+1) "EW ORK/T";

#      VARIABLE VALUES (ENGEN)
20030  USE AT(BY+3,BX+12) CF$(3),SC%(TV,0,CP);
20032  USE AT(BY+3,BX+20) CF$(3),SC%(TV,1,CP);

#      ONDON PRICES
20034  USE AT(BY+5,BX+12) CF$(4),1333;
20035  USE AT(BY+5,BX+20) CF$(4),2333;
20036  USE AT(BY+5,BX+31) CF$(4),50;

#      EW ORK PRICES
20037  USE AT(BY+6,BX+12) CF$(4),1444;
20038  USE AT(BY+6,BX+20) CF$(4),2444;
20039  USE AT(BY+6,BX+31) CF$(4),81;


20058  OWARCHOICE
20059 END PROC


20060 PROC OWARCHOICE
20062  GS(1)=9

20064  BX=19:BY=19:BW=20:BH=5:FRAME

20066  PRINT AT(BY+1,BX+1) "RANSPORT EW ORK";
20068  PRINT AT(BY+2,BX+1) "RANSPORT ONDON";
20070  PRINT AT(BY+3,BX+1) "USGANG";

20072  FILL 19,1,18,6,0,15

20074  ID=0:TAG

20079 END PROC


# INPUT WAREHOUSE
# ID=0: TRANSPORT TO LONDON
# ID=1: TRANSPORT TO NEW YORK

# T6=DESTINATION

20100 PROC IWAR
#GS(1)=9 FOR WAREHOUSE

20110  IF ID>1 THEN ID=0:FCC:SCREEN:END PROC

#      SHOW PRODUCE SELECTION (WHAT TO SHIP, SECOND CHOICE IN WAREHOUSE)
20115  T6=ID:OTRAPRO


20129 END PROC

# SHOW PRODUCE SELECTION FOR TRANSPORT
20130 PROC OTRAPRO

20132  GS(1)=16

20134  BX=19:BY=19:BW=12:BH=5:FRAME
#      CHOICE MENU FOR PRODUCE SELECTION
20136  OPRODFRAME

20139 END PROC

# HANDLE INPUT SELECTION FOR TRANSPORT PRODUCE FROM PLANTATION TO EMPORIUM
20140 PROC ITRAPRO
#GS(1)=16 FOR PRODUCE SELECTION

#      ID>1 MEANS THAT CANCEL HAS BEEN SELECTED
20142  IF ID>1 THEN 20168

#      DISPLAY VOLUME SELECTION (PRODUCE IS STILL STORED IN ID VARIABLE)
#      IF ZERO SELECTED, ABORT
#      QC: QUANTITY CONTEXT (IS QUANTITY SELECTOR FOR SALE OR TRANSPORT, ETC)
20143  QC=1:MV=SC%(PD(CP,0)-6,ID,CP)
20144  OSELQUA:IF RV=0 THEN 20168

#      T2:PRODUCE
20146  T2=VAL(TX$(PD(CP,0),ID+1)):

20150  SC%(PD(CP,0)-6,ID,CP)=SC%(PD(CP,0)-6,ID,CP)-RV

20152  LBOOKTRANSPORT

20155  GS(1)=9:OWAR:END PROC

#      AFTER THAT, SHOW WAREHOUSE CHOICE (IE BACK TO INITIAL STATE OF SCREEN)
20168  GS(1)=9:OWARCHOICE

20169 END PROC

# SHOW VOLUME SELECTION
#  THIS ALSO CALC TRANSPORT DURATION B/C THE DURATION IS DISPLAYED AT THIS POINT
20170 PROC OSELQUA
#20171  GS(1)=21

# I(X) CONTAINS 4 DIGITS. 0 IS MOST SIGNIFICANT (1000S), 3 IS LEAST (ONES)
# IP=INPUT POSITION (INDEX FOR I(X))
20175  FOR X=0 TO 3:I(X)=0:NEXT:IP=3

20176  BX=1:BY=19:BW=17:BH=5:FRAME

# QC=0: SELECTING QUANTITY FOR SALE (NO DURATION CALC)
# QC=1: SELECTING QUANTITY FOR TRANSPORT (DURATION CALC NEEDED)
20177  IF QC=0 THEN 20190

# CALCULATE TRANSPORT DURATION T5
# ID: DESTINATION (0 OR 1)
# PD(CP,0): CURRENT TOWN

# T1:TRANSPORT LOCATION 1
# T2:TRANSPORT LOCATION 2
20180  IF T6<PD(CP,0) THEN T1=T6:T2=PD(CP,0):ELSE T1=PD(CP,0):T2=T6
20184  T5=ASC(MID$(TR$(T1),(T2-T1),1))

20185  PRINT AT(BY+1,BX+1) "AUER:";
20186  USE AT(BY+1,BX+8) CF$(2),T5;

20190  PRINT AT(BY+2,BX+1) "ENGE:";
20195  PRINT AT(BY+3,BX+1) "0000 LLES";

20197  ISELQUA

20199 END PROC


# SELECT QUANTITY
# RV WILL CONTAIN THE RETURN VALUE. IE THE VALUE THE PLAYER SELECTED
20200 PROC ISELQUA

20210  PRINT AT(0,38) "T";
20220  INSEL

20225  TQ=0
20229  REPEAT

20230   DW=0:KEYGET I$:I=PEEK(512)


# "LLES" SELECTED
20231   IF IP=4 THEN 20242

# UP
20232   IF I=145 THEN DW=-1:I(IP)=I(IP)+1:IF I(IP)>9 THEN I(IP)=0
20234   IF DW THEN 20280

# DOWN
20236   IF I=17 THEN DW=-1:I(IP)=I(IP)-1:IF I(IP)<0 THEN I(IP)=9
20238   IF DW THEN 20280

# LEFT
20242   IF I=157 THEN DW=-1:INSEL:IP=IP-1:IF IP<0 THEN IP=0
20244   IF DW THEN INSEL:GOTO 20285

# RIGHT
20246   IF I=29 THEN DW=-1:INSEL:IP=IP+1:IF IP>4 THEN IP=4
20248   IF DW THEN INSEL:GOTO 20285

# RETURN
20250   IF I=13 THEN TQ=-1


# PRINT CURRENT INPUT VALUE
20280   PRINT "";
20281   IF IP<4 THEN PRINT AT(BY+3,BX+1+IP) MID$(STR$(I(IP)),2)"";
20282   PRINT AT(BY+3,BX+6) "LLES";

20285  UNTIL TQ=-1

# TODO: TV CONTAINS CURRENT CITY (CITY-ID -6)
#       FOR TRANSPORT BETWEEN EMPORIUMS, THIS NEEDS TO BE TAKEN FROM SE%()
#         AND TV NEEDS TO BE CITY-ID WITHOUT -6
#      IP=4 MEANS "LLES" IS SELECTED. ELSE, SUM UP VALUE FROM DIGITS
#         FOR "LLES": CAN BE TRANSPORT FROM PLANTATION-STORAGE (CITY-ID -6) FROM SC%()
#                      CAN BE TRANSPORT OR SELL FROM EMPORIUM-STORAGE (CITY-ID) FROM SE%()
#                      CAN BE STOCKS
#                      CAN BE DOLLARS
#                      CAN BE AMOUNT OF WORKERS
#                      CAN BE WORKER SALARY
20286  IF IP=4 THEN RV=MV:END PROC
20287  RV=I(0)*1000+I(1)*100+I(2)*10+I(3)
20288  IF RV>MV THEN RV=MV

20289 END PROC


# INVERT SELECTION
20290 PROC INSEL
20292  IF IP<4 THEN INV BY+3,BX+1+IP,1,1:END PROC
20294  INV BY+3,BX+6,5,1
20299 END PROC


# T$(): CONTAINS A LIST OF ALL TRANSPORTS
# T$: LIST OF AVAILABLE TRANSPORT-IDS
# PT$() - TRANSPORT-IDS THAT BELONG TO A PLAYER. REFERENCES T$()
# TV: TRANSPORT-VOLUME (TV IS GLOBALLY USED AS TEMPORARY VALUE)
# T1: TRANSPORT-ID (T1 ALSO USED AS TEMP VARIABLE GLOBALLY)
# T2: PRODUCE-ID (SET FROM OUTSIDE)
# T3: VOLUME LOW-BYTE
# T4: VOLUME HIGH-BYTE
# T5: TRANSPORT-DURATION IN DAYS

20300 PROC LBOOKTRANSPORT

#      LOW- AND HIGH-BYTE OF VOLUME
20330  T3=FNLB(RV):T4=FNHB(RV)

# PRODUCE.
# COMES FROM OUTSIDE, AS LBOOKTRANSPORT CAN BE CALLED FROM PLANTATION OR EMPORIUM
#20340  T2=VAL(TX$(PD(CP,0),ID+1))

# T1: NEW TRANSPORT-ID
#FNTX GETS FIRST VALUE OF T$ - 
20350  T1=FN TX(0):T$=MID$(T$,2)

#ADD TRANSPORT-ID TO PLAYER'S TRANSPORTS
20360  PT$(CP)=PT$(CP)+CHR$(T1)

# EACH ENTRY IN T$(T-ID) IS A STRING, CONTAINING
# - TRANSPORT DAYS LEFT (1 BYTE)
# - PLAYER-ID (1 BYTE)
# - PRODUCE (1 BYTE)
# - VOLUME (2 BYTES)
# - DESTINATION (1 BYTE)
# - DATE OF ARRIVAL (3 BYTES)
20370  T$(T1)=CHR$(T5)+CHR$(CP)+CHR$(T2)+CHR$(T3)+CHR$(T4)+CHR$(T6)

20399 END PROC


# WE SOLD GOODS IN THE EMPORIUM
# 
20500 PROC LBOOKSALE


20999 END PROC


##################
# ARKETPLACE 10 #
##################
#
#
#           AFFEE   EE ABAK AKAO  #
# ENGE      0000T 0000T 0000T 0000T  #
# ERMIN     0000T 0000T 0000T 0000T  #
# REIS/T     123  123  123  123  #
# ERT       1230 1234 1230 1234  #
#
# EW ORK
# REIS/T
# OSTEN/T
#
#                              ERKAUF #
#                            RANSPORT #
#                      ERMINGESCHAEFT #
#                              USGANG #

# MARKETPLACE IS AT EMPORIUM CITY (LONDON OR NEW YORK)
# THE ONE AT THE PLANTATION IS CALLED WAREHOUSE
21000 PROC OMAR
21002  GS(1)=10
21005  LDCHDR

#      DRAW BIG FRAME WITH STORAGES
21010  BX=1:BY=5:BW=38:BH=11:FRAME

#      DRAW QUANTITIES IN STOCK, AND PRICE
21020  BX=1:BY=17:BW=24:BH=6:FRAME

#      DRAW LIST OF PRODUCTS, STOCK, AND PRICE
21030  FOR PX=0 TO 3
21032   PRINT AT(BY+1+PX,BX+1) TT$(PX);
21034   USE AT(BY+1+PX,BX+9) CF$(3),SE%(PD(CP,0),PX,CP);
21036   USE AT(BY+1+PX,BX+16) CF$(4),PX*233;
21039  NEXT




#      DRAW CHOICES
21050  OC=CM%(GS(1),1)
21052  BX=27:BY=20-OC:BW=12:BH=3+OC:FRAME



# SELL GOODS:
#  SELECT PRODUCE
#  SELECT QUANTITY
#  CALL SALE LOGIC
21084  I1=0:PRINT AT(BY+I1+1,BX+1) "ERKAUF";

# TRANSPORT GOODS TO OTHER EMPORIUM
#  SELECT PRODUCE
#  SELECT QUANTITY
#  CALL TRANSPORT LOGIC
21086  I1=1:PRINT AT(BY+I1+1,BX+1) "RANSPORT";

21088  I1=2:PRINT AT(BY+I1+1,BX+1) "ERMINE";
21090  I1=3:PRINT AT(BY+I1+1,BX+1) "USGANG";

21095  ID=0:TAG

21099 END PROC


# MPORIUM INPUT HANDLING
21100 PROC IMAR

# ERKAUF
# WE NEED:PRODUCE AND VOLUME

# T1=PRODUCE, T2/T3=VOLUME
# T1   =OMARPRO,IMARPRO
# T2/T3=OSELQUA,ISELQUA

21110  IF ID=0 THEN QC=0:OSEL4PRO:END PROC

# TRANSPORT
# WE NEED: PRODUCE AND VOLUME
#          DESTINATION = LOCATION OF OTHER EMPORIUM
#
# T1=DAYS, T2=PLAYER-ID, T3=PRODUCE, T4/T5=VOLUME, T6=DESTINATION
# T6: OTHER DESTINATION (0 OR 1)
# T1: DERIVED FROM DESTINATION
# T2: CP
# T3: OMARPRO,IMARPRO
# T4/T5: VOLUME
21115  IF ID=1 THEN QC=1:OSEL4PRO:END PROC

# ERMINE
21120  IF ID=2 THEN OMARDATE:END PROC

# USGANG
21130  IF ID=3 THEN ID=0:FCC:SCREEN:END PROC


21159 END PROC


##############
# XPEDITION 11 #
##############
22000 PROC OEXP
22001  GS(1)=11

22010  LDCHDR
22020  TX$="XPEDITION":BOXWITHTEXT
22030  CHOICEMENU

22040 END PROC

22100 PROC IEXP
22110  HANDLECHOICE
22120 END PROC

##############
# OURNEY 99 #
##############

# JOURNEY SHOWS THE TRAVEL PROGRESS OF ALL PLAYERS.
# ALSO: IT'S THE SCREEN WHERE DAYS GO BY.
# SO, THIS TRIGGERS ALL THE CALCULATIONS, LIKE CALENDAR, PRODUCTION, WAGES, ...

22200 PROC OJOURNEY

22210  GS(1)=99:FILL 0,0,40,25,0,15

#      DRAW FRAME FOR TRAVEL PROGRESS (TRAINS AND SHIPS)
22220  BX=1:BY=1:BW=38:BH=5:FRAME

22230  PRINT AT(BY+2,2) "OCH";:USE AT(BY+2,7) CF$(2),PD(0,3);

22235  IF PD(0,0)=PD(0,2) THEN TX$="UFENTHALT IN "+TX$(PD(0,0),0):GOTO 22245
22240  TX$=TX$(PD(0,0),0)+"/"+TX$(PD(0,2),0)

22245  PRINT AT(BY+3,2) "PIELER "RIGHT$(STR$(CP),1)": "TX$;

#      DRAW FRAME FOR PLAYER DEPARTURE
22260  BX=1:BY=19:BW=38:BH=5:FRAME
22270  PRINT AT(BY+1,BX+1)  "BFAHRT: PIELER"CP"IN "TX$(PD(CP,0),0);
22280  USE AT(BY+2,BX+10) "##.",DT(0);:USE "##.",DT(1);:USE "####",DT(2);

#      DECREASE TRAVEL DURATION AND UPDATE SCREEN
22300  TQ=0:REPEAT
#22305   POKE P(0),0: REPEAT: UNTIL PEEK(P(0))>30
22310   IF PD(0,3)<=0 THEN TQ=-1:GOTO 22350

#       ADVANCE THE DAY
22320   LADVDAY

#       PRINT UPDATED TRAVEL DURATION
22340   USE AT(3,7) CF$(2),PD(0,3);

22350  UNTIL TQ

22360  FILL 20,2,36,3,32,1
22365  PRINT AT(BY+1,BX+1) "NKUNFT: PIELER"CP"IN "TX$(PD(0,2),0);
22370  USE AT(BY+2,BX+10) "##.",DT(0);:USE "##.",DT(1);:USE "####",DT(2);

22399 END PROC


#     WHEN A PLAYER ARRIVES AT THE DESTINATION, WAIT FOR KEYPRESS,
#      SET THE NEW TOWN AND ADVANCE TO THE TOWN SCREEN
22400 PROC IJOURNEY

22405  PAUSE 5

22410  PD(CP,0)=PD(CP,2):FCC

22415  ID=0:SCREEN

22599 END PROC

##################################################
#     CALCULATE EVERYTHING THAT HAPPENS IN A DAY #
##################################################
22600 PROC LADVDAY

#       UPDATE CALENDAR
22610   DT(0)=DT(0)+1
22612   IF DT(0)>DC(DT(1)-1) THEN DT(1)=DT(1)+1:DT(0)=1
#       ADVANCE YEAR IF APPLICABLE AND DO LEAP-YEAR CALC FOR FEBRUARY
22614   IF DT(1)>12 THEN DT(1)=1:DT(2)=DT(2)+1:DC(1)=28+ABS(DT(2)=INT(DT(2)/4)*4)

#       DECREASE TRAVELTIMES OF ALL PLAYERS (TODO: LOOP OVER ALL PLAYERS)
22620   PD(0,3)=PD(0,3)-1

#       DECREASE TRANSPORT DURATIONS OF ALL TRANSPORTS
22630   LDECTRADUR

#       INCREASE LAST VISIT RECORDS
22640   FOR X=0TO14:FORY=0TO3
22643    TV=LV%(X,Y,2)
22646    IF TV>=0 THEN LV%(X,Y,2)=TV+1
22649   NEXT:NEXT


#       PI:NEXT FREE PLANTATION-ID. 0 MEANS NO PLANTATIONS YET.
22799   IF PI=0 THEN 22991

#       ITERATE OVER ALL PLANTATIONS
22800   FOR PX=0 TO PI-1

#        PLANTATION. TV=SIZE OF PLANTATION (TV=TEMP VALUE)
22810    PL$=PL$(PX):TV=FN PL(9):WK=TV
#        CT:TOWN OF PLANTATION (-6 NOT NEEDED B/C IT'S ALREADY STORED THAT WAY)
22811    CT=FN PL(11)
#        PO:OWNER OF PLANTATION
22812    PO=FN PL(10)
#        PS:PRODUCE STORAGE
22813    PS=FN PL(12)

#        CALCULATE PRODUCTION OF ALL PLANTATIONS
#        OPTIMAL WORKER/SIZE RATIO IS 2 WORKERS PER HA (IE 200% OF SIZE)
#        IF NR WORKERS = 50% OF SIZE THEN PRODUCTIVITY IN TONS = 33% OF SIZE
#        IF NR WORKERS = 250% OF SIZE THEN PRODUCTIVITY IN TONS = 80% OF SIZE
#        36 HA -> 18 WORKERS -> 12 TONS -- UNTIL HERE LINEAR PROD INCREASE
#         6 HA ->  3 WORKERS ->  2 TONS

22820    FK=WK/TV
22825    IF FK<2.6 THEN PR=0.2 * FK2 / (FK2 + 1.5):GOTO 22835
22830    IF FK>=2.6 THEN PR=0.2 - (FK - 2.5)*0.04:IFPR<0THENPR=0

#        PRODUCTION EQUALS RATIO X SIZE
22835    PR=PR*TV

#        BOOK PRODUCTION TO LAST-VISIT DATA
22840    LV%(CT,PO,PS)=LV%(CT,PO,PS)+PR

#        BOOK PRODUCTION TO STORAGE
22845    SC%(CT,PS,PO)=SC%(CT,PS,PO)+PR

#        CALCULATE WAGES OF ALL WORKERS
#22900    WG(

#        CALCULATE RUNNING COSTS OF PLANTATIONS
#        - 
22990   NEXT

22991   REM WHATEVER COMES NEXT

22999 END PROC


# TRANSPORT ARRIVED.
# PX=TRANSPORT DATA INDEX
23000 PROC LARRTRA

#      BOOK TRANSPORT VOLUME TO EMPORIUM
#      LOVE: WRITE VALUES FROM T$() TO T1-T6 VARIABLES
#      SE%(CITY-ID,PRODUCE-ID,PLAYER-ID)
#      TD$: TRANSPORT-DATA
23010  TD$=T$(PX):LOVE
23020  SE%(T6,T3,T2)=SE%(T6,T3,T2)+T4+T5*256



#      T$(PX): EMPTY TRANSPORT DATA AT INDEX
#      T$: PUT TRANSPORT-INDEX BACK INTO LIST OF AVAILABLE TRANSPORTS
23030  T$(PX)="":T$=T$+CHR$(PX)


#23032  GOTO 23098
#
#      REMOVE TRANSPORT-ID FROM PLAYER'S TRANSPORT ENTRIES

#      T1:LENGTH OF PLAYER'S TRANSPORT ENTRIES
23035  T1=LEN(PT$(CP))

#      ONLY 1 TRANSPORT LEFT, JUST CLEAR STRING-LIST
23040  IF T1=1 THEN PT$(CP)="":GOTO 23098

#      TV:INDEX OF LIST-ENTRY
23050  TV=PLACE(CHR$(PX),PT$(CP))

#      FIRST ENTRY, JUST USE REST OF LIST (FROM INDEX 2 ON)
23060  IF TV=1 THEN PT$(CP)=MID$(PT$(CP),2):GOTO 23098

#      LAST ENTRY, USE LIST EXCEPT LAST ENTRY.
23070  IF TV=T1 THEN PT$(CP)=LEFT$(PT$(CP),T1-1):GOTO 23098

#      SOMEWHERE IN THE MIDDLE, USE BEFORE AND AFTER
23080  PT$(CP)=LEFT$(PT$(CP),TV-1)+MID$(PT$(CP),TV+1)

23098  REM WHATEVER COMES NEXT
23099 END PROC

######################
# OVERVIEW SCREEN 17 #
######################
23100 PROC OOVE

23105  FILL 0,0,40,25,0,15
23110  GS(1)=17
23115  LDCHDR


#      ORWARD ONTRACTS
23120  BX=1:BY=6:BW=38:BH=5:FRAME
23122  PRINT AT(BY+1,BX+1) "ERMINGESCH]FTE";
23124  PRINT AT(BY+2,BX+1) "AFFEE";
23125  PRINT AT(BY+2,BX+8) "";
23126  PRINT AT(BY+2,BX+12) "12.10.1922";
23127  USE AT(BY+2,BX+23) "###/",0
23128  USE AT(BY+2,BX+27) "###T",123
23129  USE AT(BY+2,BX+31) CF$(4),777

23130  PRINT AT(BY+3,BX+1) "EE";
23132  PRINT AT(BY+3,BX+8) "ON";
23133  PRINT AT(BY+3,BX+12) "1.1.1921";
23134  USE AT(BY+3,BX+23) "###/",0
23136  USE AT(BY+3,BX+27) "###T",246
23137  USE AT(BY+3,BX+31) CF$(4),888

#      RANSPORTS
23140  BX=1:BY=12:BW=38:BH=5:FRAME
23142  PRINT AT(BY+1,BX+1) "RANSPORTE";

# - TRANSPORT DAYS LEFT (1 BYTE)
# - PLAYER-ID (1 BYTE)
# - PRODUCE (1 BYTE)
# - VOLUME (2 BYTES)
# - DESTINATION (1 BYTE)
23143  IF LEN(PT$(CP))=0 THEN 23160
23144  FOR X=1 TO LEN(PT$(CP))

23146   TV=ASC(MID$(PT$(CP),X,1)):TD$=T$(TV):LOVE

23148   PRINT AT(BY+2+X,BX+1) T1"AGE, "TT$(T3)", "(T4+T5*256)"T,"TX$(T6,0)

23159  NEXT

23160  CHOICEMENU

23199 END PROC

#######

23200 PROC IOVE

23202  HANDLECHOICE

23209 END PROC

#######

# - TRANSPORT DAYS LEFT (1 BYTE)
# - PLAYER-ID (1 BYTE)
# - PRODUCE (1 BYTE)
# - VOLUME (2 BYTES)
# - DESTINATION (1 BYTE)
# - DATE OF ARRIVAL (3 BYTES)

23220 PROC LOVE

23222  IF LEN(TD$)<6 THEN PRINT "NOPE":STOP

# TRANSPORT DAYS LEFT
23224  T1=ASC(MID$(TD$,1,1))
# PLAYER-ID
23225  T2=ASC(MID$(TD$,2,1))
# PRODUCE
23226  T3=ASC(MID$(TD$,3,1))
# VOLUME
23227  T4=ASC(MID$(TD$,4,1))
23228  T5=ASC(MID$(TD$,5,1))
# DESTINATION
23229  T6=ASC(MID$(TD$,6,1))

23230 END PROC
#####################

# LOGIC TO TRANSPORT TO DIFFERENT EMPORIUM
23240 PROC LTRANSEMP

23245  IF PD(CP,0)=0 THEN T6=1:ELSE T6=0

23299 END PROC

# DECREASE TRANSPORT DURATION
23300 PROC LDECTRADUR

#       DECREASE TRANSPORTTIME OF ALL SHIPMENTS
#       T$(): GLOBAL TRANSPORT LIST
23310   FOR PX=0 TO 9
23320    IF LEN(T$(PX))=0 THEN 23350

#        TV:TRANSPORT DURATION LEFT IN DAYS
23330    TV=ASC(LEFT$(T$(PX),1))-1

#        TRANSPORT ARRIVED: BOOK TO STORAGE. ELSE:UPDATE TRANSPORT DURATION
23340    IF TV=0 THEN LARRTRA:GOTO 23350
23345    T$(PX)=INST(CHR$(TV),T$(PX),1)

23350   NEXT

23399 END PROC

#######################
# MPORIUM (10) SELECT RODUCE (18) (FOR TRANSPORT AND SALE)
23400 PROC OSEL4PRO
23402  GS(1)=18

23410  BX=30:BY=17:BW=9:BH=7:FRAME

#      CHOICE MENU FOR PRODUCE SELECTION
23420  FOR PX=0 TO 3
23430   PRINT AT(BY+1+PX,BX+1) TT$(PX);
23435  NEXT
23440  PRINT AT(BY+5,BX+1) M$(0);

23450  ID=0:TAG


23549 END PROC

#------
# SELECT FROM 4 PRODUCES (ONLY IN EMPORIUM.)
# SELL (QC=0): WRITE SELECTION TO T1
# TRANSPORT (QC=1): WRITE SELECTION TO T2

23550 PROC ISEL4PRO

# USGANG HAS BEEN SELECTED
23555  IF ID>3 THEN GS(1)=10:SCREEN:END PROC

# QC=0:WE'RE COMING FROM "ERKAUFEN"
# QC=1:WE'RE COMING FROM "RANSPORT"
23570  IF QC>1 THEN PRINT "QC SHOULD BE 0 OR 1, BUT IS "QC:STOP

# MV:MAX-VALUE THAT'S ACCEPTED BY ISELQUA
# T6:TRANSPORT DESTINATION (ALWAYS THE OTHER EMPORIUM CITY)
23575  MV=SE%(PD(CP,0),ID,CP):IF MV=0 THEN 23595
23577  IF PD(CP,0)=0 THEN T6=1:ELSE IF PD(CP,0)=1 THEN T6=0
23580  OSELQUA

# T2 CONTAINS PRODUCE (FOR LBOOKTRANSPORT)
23581  IF QC=1 THEN T2=ID:LBOOKTRANSPORT:GOTO 23590

# QC=0 AT THIS LINE. SELL
# THIS WOULD BE PROC LBOOKSALE (IF IT WAS CALLED FROM MULTIPLE PLACES)
#      ADD MONEY TO PLAYER'S CASH
23585  PD(CP,1)=PD(CP,1)+RV*100


# TRANSPORTED OR SOLD. REDUCE VOLUME ON STOCK
23590  SE%(PD(CP,0),ID,CP)=SE%(PD(CP,0),ID,CP)-RV

23595  TX$="QC="+STR$(QC)+",PRD:"+STR$(ID)+",VOL:"+STR$(RV):BOXWITHTEXT
23598  KEYGET I$:GS(1)=10:SCREEN

23599 END PROC


# MPORIUM (10) ORWARD ONTRACTS (19)
23600 PROC OMARDATE
23602  GS(1)=19

23610  TX$="ORWARD ONTRACTS":BOXWITHTEXT

23740  ID=0:CHOICEMENU

23749 END PROC

#------

23750 PROC IMARDATE

23760  GS(1)=10:SCREEN

23799 END PROC

################
# WORKERS (20) #
################

24000 PROC OWOR
24010  GS(1)=20
24020  LDCHDR
24030  TX$="ORKERS":BOXWITHTEXT
24040  CHOICEMENU

24499 END PROC



24500 PROC IWOR
24510  HANDLECHOICE
24999 END PROC


#####################

58100 PROC LDECMONEY
58102  PD(CP,1)=PD(CP,1)-DM
58104  DM=0
58106 END PROC

# INEN ASTEN MIT CHATTEN MALEN, DIE ARBEN SIND IN EINEM RRAY, DAMIT MAN
# DIE ARBKOMBINATIONEN UNTER ONTROLLE HAT.

58200 PROC FRAME
58210  INSERT BD$,BY,BX,BW,BH,FB
58215  FILL BY+1,BX+1,BW-2,BH-2,32,1
58220  FCOL BY+BH,BX+1,BW,1,11:REM F%(0,ID)
58225  FCOL BY+1,BX+BW,1,BH,11:REM F%(0,ID)
58230 END PROC

# AHMENZEICHEN
58250 DATA 111,183,112,180,32,170,108,187,188

# TATT OPPELAUSGABE (EINMAL DAVON REVERS) EINFACH  VERWENDEN!

# INEN ENUEPUNKT MARKIEREN
58400 PROC TAG
58410  INV BY+ID+1,BX+1,CM%(GS(1),0),1
58420 END PROC

# AS ENUE, IN EINER CHLEIFE. CH VERSUCHE IMMER JEGLICHE ORM VON  ZU
# VERMEIDEN, DAMIT EIN ROGRAMM JEDERZEIT MOEGLICHST EINFACH ZU VERAENDERN IST.

58440 PROC MENUE
#8442  TAG

58443  LOOP
58444   IF MI THEN QRYMOUSE
58446   IF NOT MI THEN DO

58448    Q=0

58452    REPEAT:PRINT AT(0,38) ".";

58453     IF GS(1)=99 THEN PRINT AT(0,38) "J";:IJOURNEY

58454     R=0:KEYGET I$:I=PEEK(512)
58455     OC=CM%(GS(1),1)

58456     IF I=145 THEN TAG:ID=ID-1:R=-1:IF ID<0 THEN ID=OC
58457     IF I=17 THEN TAG:ID=ID+1:R=-1:IF ID>OC THEN ID=0

58458     IF I$="F" THEN POKE0,65
58459     IF I$="S" THEN POKE0,64

58460     IF I=13 THEN HANDLEENTER

58462     IF I=ASC("I") THEN MI=-1:Q=-1
58464     IF R THEN TAG

58466    UNTIL Q=-1

58470   DONE
58472  END LOOP

58474 END PROC





# HANDLES THE ENTER KEY IN THE MAIN NAVIGATION FRAME
# THIS IS JUST A DISPATCH METHOD THAT FORWARDS TO THE INPUT HANDLER
# OF THE ACCORDING ROOM


58479 PROC HANDLEENTER

58480  PRINT AT(0,38) "X";

58481  IF GS(1)=3 THEN ITRA:END PROC
58482  IF GS(1)=4 THEN IHOT:END PROC
58483  IF GS(1)=9 THEN IWAR:END PROC
58484  IF GS(1)=10 THEN IMAR:END PROC
58485  IF GS(1)<12 THEN HANDLECHOICE:END PROC
#58480  IF GS(1)=0 THEN IHUBEMP:END PROC
#58481  IF GS(1)=1 THEN IHUBGAL:END PROC
#58482  IF GS(1)=2 THEN IHUBPLA:END PROC
#58485  IF GS(1)=5 THEN IGAL:END PROC
#58486  IF GS(1)=6 THEN IBAN:END PROC
#58487  IF GS(1)=7 THEN IAUC:END PROC
#58488  IF GS(1)=8 THEN IPLA:END PROC

#58491  IF GS(1)=11 THEN IEXP:END PROC

58486  IF GS(1)=12 THEN IPLABUY:END PROC
58487  IF GS(1)=13 THEN IPLASEL:END PROC
58488  IF GS(1)=14 THEN IPLAMAN:END PROC
58489  IF GS(1)=15 THEN IPLAPLANT:END PROC
58490  IF GS(1)=16 THEN ITRAPRO:END PROC
58491  IF GS(1)=17 THEN IOVE:END PROC
58492  IF GS(1)=18 THEN ISEL4PRO:END PROC
58493  IF GS(1)=19 THEN IMARDATE:END PROC
58494  IF GS(1)=20 THEN IWOR:END PROC

58498  IF GS(1)=99 THEN IJOURNEY

58499 END PROC



# THIS SHOULD ONLY BE USED TO HANDLE THE MAIN SCREENS.
#  ALL SUB-SCREENS (LIKE EG PLANTATION SCREENS) SHOULD BE HANDLED INDIVIDUALLY
#  AS THESE MIGHT NOT NEED TO SETUP THE FULL-SCREEN ALWAYS

#GS(1): CURRENT ROOM
#TV: TEMP-VALUE
58500 PROC HANDLECHOICE

58505  TV=RO%(GS(1),1,ID)
58510  IF TV<128 THEN GS(1)=TV: ELSE FCC
58515  ID=0
58520  SCREEN

58525 END PROC


#FCC=FILLCURCITY
58550 PROC FCC
58560   GS(1)=2
58570   IF TX$(PD(CP,0),1)="" THEN GS(1)=0
58580   IF TX$(PD(CP,0),1)="" THEN GS(1)=1
58599 END PROC


# AUSABFRAGE
58600 PROC QRYMOUSE

58602  Q=0:MOB ON 0
58605  REPEAT

58610   GET X$

58615   IF X$=CHR$(160) THEN CLICKP
#1517   IF JOY(1)=1 THEN CLICKS

58620   X0=INT(PEEK($D000)):X1=PEEK($D010 )AND 1:Y0=PEEK($D001):X=X0+256*X1
58630   X=INT(X0+X1*256):Y=INT(Y0)

58640   USE AT(17,18)"X =-###",X:USE AT(18,18)"Y =-###",Y:X$=""

58645   GET I$:IF LEN(I$)>0 THEN IF I$="I" THEN MI=0:Q=-1

58650  UNTIL Q=-1
58658  MOB OFF 0

58660 END PROC



# CLICK PRIMAERE MAUSTASTE (LINKS)
58700 PROC CLICKP
58705  PRINT AT(19,18)"LINKS "
58710 END PROC

# CLICK SEKUNDAERE MAUSTASTE (RECHTS)
58715 PROC CLICKS
58720  PRINT AT(19,18)"RECHTS"
58725 END PROC


58800 PROC INITMOUSE

58824  MOB SET 0,0,15,128,0
58825  SYS$033C:RLOCMOB0,160,100,0,1
58826  MOB OFF 0

# SPRITE-IDX, SLOT-IDX, COLOR, PRIO, TYPE, SIZE
58955  MOB SET 1,1,1,128,0,1
58956  MOB SET 2,2,1,128,0,0
58957  MOB SET 3,3,1,128,0,1
58958  MOB SET 4,4,1,128,0,0
58959  MOB SET 5,5,1,128,0,0
58999 END PROC


# REI RTEN VON TAEDTEN:
# * ONDON UND EW ORK:
#   - EISEN
#   - ARKTPLATZ
#   - OTEL
#   - ANK
#   - UKTIONSHAUS

# * MSTERDAM, ISSABON, ARIS, ERLIN (UND AN RANCISCO, OM)
#   - EISEN
#   - ALLERIE
#   - OTEL
#   - ANK
#   - UKTIONSHAUS

# * LLE ANDEREN 15 TADTE: LANTAGEN
#   - EISEN
#   - LANTAGE
#   - RBEITER
#   - OTEL
#   - AGER
# NKARA,OMBAY,OLOMBO,OMBASA,UALA,BIDJAN,IO,OGOTA
# UATEMALA,EXICO ITY,AVANA,T.OUIS,ATAVIA,ONGKONG,OKYO

59000 PROC INITCITIES
59005  PRINT "EFUELLE DIE ELT..."
# 0:AME DER TADT
# 1: ODER  (MPORIUM, ALLERY) ODER IFFER FUER ERSTES RODUKT
# 2:IFFER FUER ZWEITES RODUKT
# 3:IFFER FUER HIPPING OMPANY
# 4:ENDING AGES (TO BE PAID ON NEXT ARRIVAL)
# 5:ENDING COST (TO BE PAID ON NEXT ARRIVAL)
59010  DIM TX$(22,5)
59011  OPEN 1,USE,3,"CITIES,S,R"
59020  FOR L=0 TO 22

59030   INPUT#1,TX$(L,0),TX$(L,1),TX$(L,2),TX$(L,3)

59040  NEXT
59050  CLOSE 1


59059 PRINT "... UND BEREISE SIE";
59060 OPEN 1,USE,3,"TRAVEL,S,R"

59062 FOR X=0 TO 19
59064  L=20-X
59066  TR$(X)=""
59068  REPEAT
59070   GET#1,A$:TR$(X)=TR$(X)+A$:L=L-1
59072  UNTIL L<1
59074  PRINT ".";
59076 NEXT

59078 CLOSE 1
59079 PRINT

59090  PRINT "ORT UND CHRIFT..."
59091  DIM TT$(16)
59092  OPEN 1,USE,3,"TEXTS,S,R"
59093  FOR L=0 TO 16
59094   INPUT#1,TT$(L)
59095  NEXT
59096  CLOSE 1

59099 END PROC


